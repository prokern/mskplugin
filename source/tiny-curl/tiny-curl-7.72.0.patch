diff --git a/Makefile.am b/Makefile.am
index b9632770d..f33b07a5e 100644
--- a/Makefile.am
+++ b/Makefile.am
@@ -176,11 +176,11 @@ PLAN9_DIST = plan9/include/mkfile \
  plan9/lib/mkfile                 \
  plan9/src/mkfile.inc             \
  plan9/src/mkfile
 
 EXTRA_DIST = CHANGES COPYING maketgz Makefile.dist curl-config.in \
- RELEASE-NOTES buildconf libcurl.pc.in MacOSX-Framework \
+ TINY-RELEASE-NOTES RELEASE-NOTES buildconf libcurl.pc.in MacOSX-Framework \
  scripts/updatemanpages.pl $(CMAKE_DIST) \
  $(VC_DIST) $(WINBUILD_DIST) $(PLAN9_DIST) \
  lib/libcurl.vers.in buildconf.bat scripts/coverage.sh scripts/completion.pl
 
 CLEANFILES = $(VC6_LIBDSP) $(VC6_SRCDSP) $(VC7_LIBVCPROJ) $(VC7_SRCVCPROJ) \
diff --git a/TINY-RELEASE-NOTES b/TINY-RELEASE-NOTES
new file mode 100644
index 000000000..8c60bd155
--- /dev/null
+++ b/TINY-RELEASE-NOTES
@@ -0,0 +1,17 @@
+# tiny-curl 7.72.0
+
+This tiny-curl version includes the following changes (delta from curl
+7.72.0):
+
+ o FreeRTOS support
+ o Micrium OS support
+ o socketpair: allow CURL_DISABLE_SOCKETPAIR
+ o curl_get_line: only build if cookies or alt-svc are enabled
+
+## Full changelog
+
+See RELEASE-NOTES for all changes done since the previous curl release.
+
+## Website
+
+https://curl.haxx.se/tiny/
diff --git a/docs/GPLv3.txt b/docs/GPLv3.txt
new file mode 100644
index 000000000..f288702d2
--- /dev/null
+++ b/docs/GPLv3.txt
@@ -0,0 +1,674 @@
+                    GNU GENERAL PUBLIC LICENSE
+                       Version 3, 29 June 2007
+
+ Copyright (C) 2007 Free Software Foundation, Inc. <https://fsf.org/>
+ Everyone is permitted to copy and distribute verbatim copies
+ of this license document, but changing it is not allowed.
+
+                            Preamble
+
+  The GNU General Public License is a free, copyleft license for
+software and other kinds of works.
+
+  The licenses for most software and other practical works are designed
+to take away your freedom to share and change the works.  By contrast,
+the GNU General Public License is intended to guarantee your freedom to
+share and change all versions of a program--to make sure it remains free
+software for all its users.  We, the Free Software Foundation, use the
+GNU General Public License for most of our software; it applies also to
+any other work released this way by its authors.  You can apply it to
+your programs, too.
+
+  When we speak of free software, we are referring to freedom, not
+price.  Our General Public Licenses are designed to make sure that you
+have the freedom to distribute copies of free software (and charge for
+them if you wish), that you receive source code or can get it if you
+want it, that you can change the software or use pieces of it in new
+free programs, and that you know you can do these things.
+
+  To protect your rights, we need to prevent others from denying you
+these rights or asking you to surrender the rights.  Therefore, you have
+certain responsibilities if you distribute copies of the software, or if
+you modify it: responsibilities to respect the freedom of others.
+
+  For example, if you distribute copies of such a program, whether
+gratis or for a fee, you must pass on to the recipients the same
+freedoms that you received.  You must make sure that they, too, receive
+or can get the source code.  And you must show them these terms so they
+know their rights.
+
+  Developers that use the GNU GPL protect your rights with two steps:
+(1) assert copyright on the software, and (2) offer you this License
+giving you legal permission to copy, distribute and/or modify it.
+
+  For the developers' and authors' protection, the GPL clearly explains
+that there is no warranty for this free software.  For both users' and
+authors' sake, the GPL requires that modified versions be marked as
+changed, so that their problems will not be attributed erroneously to
+authors of previous versions.
+
+  Some devices are designed to deny users access to install or run
+modified versions of the software inside them, although the manufacturer
+can do so.  This is fundamentally incompatible with the aim of
+protecting users' freedom to change the software.  The systematic
+pattern of such abuse occurs in the area of products for individuals to
+use, which is precisely where it is most unacceptable.  Therefore, we
+have designed this version of the GPL to prohibit the practice for those
+products.  If such problems arise substantially in other domains, we
+stand ready to extend this provision to those domains in future versions
+of the GPL, as needed to protect the freedom of users.
+
+  Finally, every program is threatened constantly by software patents.
+States should not allow patents to restrict development and use of
+software on general-purpose computers, but in those that do, we wish to
+avoid the special danger that patents applied to a free program could
+make it effectively proprietary.  To prevent this, the GPL assures that
+patents cannot be used to render the program non-free.
+
+  The precise terms and conditions for copying, distribution and
+modification follow.
+
+                       TERMS AND CONDITIONS
+
+  0. Definitions.
+
+  "This License" refers to version 3 of the GNU General Public License.
+
+  "Copyright" also means copyright-like laws that apply to other kinds of
+works, such as semiconductor masks.
+
+  "The Program" refers to any copyrightable work licensed under this
+License.  Each licensee is addressed as "you".  "Licensees" and
+"recipients" may be individuals or organizations.
+
+  To "modify" a work means to copy from or adapt all or part of the work
+in a fashion requiring copyright permission, other than the making of an
+exact copy.  The resulting work is called a "modified version" of the
+earlier work or a work "based on" the earlier work.
+
+  A "covered work" means either the unmodified Program or a work based
+on the Program.
+
+  To "propagate" a work means to do anything with it that, without
+permission, would make you directly or secondarily liable for
+infringement under applicable copyright law, except executing it on a
+computer or modifying a private copy.  Propagation includes copying,
+distribution (with or without modification), making available to the
+public, and in some countries other activities as well.
+
+  To "convey" a work means any kind of propagation that enables other
+parties to make or receive copies.  Mere interaction with a user through
+a computer network, with no transfer of a copy, is not conveying.
+
+  An interactive user interface displays "Appropriate Legal Notices"
+to the extent that it includes a convenient and prominently visible
+feature that (1) displays an appropriate copyright notice, and (2)
+tells the user that there is no warranty for the work (except to the
+extent that warranties are provided), that licensees may convey the
+work under this License, and how to view a copy of this License.  If
+the interface presents a list of user commands or options, such as a
+menu, a prominent item in the list meets this criterion.
+
+  1. Source Code.
+
+  The "source code" for a work means the preferred form of the work
+for making modifications to it.  "Object code" means any non-source
+form of a work.
+
+  A "Standard Interface" means an interface that either is an official
+standard defined by a recognized standards body, or, in the case of
+interfaces specified for a particular programming language, one that
+is widely used among developers working in that language.
+
+  The "System Libraries" of an executable work include anything, other
+than the work as a whole, that (a) is included in the normal form of
+packaging a Major Component, but which is not part of that Major
+Component, and (b) serves only to enable use of the work with that
+Major Component, or to implement a Standard Interface for which an
+implementation is available to the public in source code form.  A
+"Major Component", in this context, means a major essential component
+(kernel, window system, and so on) of the specific operating system
+(if any) on which the executable work runs, or a compiler used to
+produce the work, or an object code interpreter used to run it.
+
+  The "Corresponding Source" for a work in object code form means all
+the source code needed to generate, install, and (for an executable
+work) run the object code and to modify the work, including scripts to
+control those activities.  However, it does not include the work's
+System Libraries, or general-purpose tools or generally available free
+programs which are used unmodified in performing those activities but
+which are not part of the work.  For example, Corresponding Source
+includes interface definition files associated with source files for
+the work, and the source code for shared libraries and dynamically
+linked subprograms that the work is specifically designed to require,
+such as by intimate data communication or control flow between those
+subprograms and other parts of the work.
+
+  The Corresponding Source need not include anything that users
+can regenerate automatically from other parts of the Corresponding
+Source.
+
+  The Corresponding Source for a work in source code form is that
+same work.
+
+  2. Basic Permissions.
+
+  All rights granted under this License are granted for the term of
+copyright on the Program, and are irrevocable provided the stated
+conditions are met.  This License explicitly affirms your unlimited
+permission to run the unmodified Program.  The output from running a
+covered work is covered by this License only if the output, given its
+content, constitutes a covered work.  This License acknowledges your
+rights of fair use or other equivalent, as provided by copyright law.
+
+  You may make, run and propagate covered works that you do not
+convey, without conditions so long as your license otherwise remains
+in force.  You may convey covered works to others for the sole purpose
+of having them make modifications exclusively for you, or provide you
+with facilities for running those works, provided that you comply with
+the terms of this License in conveying all material for which you do
+not control copyright.  Those thus making or running the covered works
+for you must do so exclusively on your behalf, under your direction
+and control, on terms that prohibit them from making any copies of
+your copyrighted material outside their relationship with you.
+
+  Conveying under any other circumstances is permitted solely under
+the conditions stated below.  Sublicensing is not allowed; section 10
+makes it unnecessary.
+
+  3. Protecting Users' Legal Rights From Anti-Circumvention Law.
+
+  No covered work shall be deemed part of an effective technological
+measure under any applicable law fulfilling obligations under article
+11 of the WIPO copyright treaty adopted on 20 December 1996, or
+similar laws prohibiting or restricting circumvention of such
+measures.
+
+  When you convey a covered work, you waive any legal power to forbid
+circumvention of technological measures to the extent such circumvention
+is effected by exercising rights under this License with respect to
+the covered work, and you disclaim any intention to limit operation or
+modification of the work as a means of enforcing, against the work's
+users, your or third parties' legal rights to forbid circumvention of
+technological measures.
+
+  4. Conveying Verbatim Copies.
+
+  You may convey verbatim copies of the Program's source code as you
+receive it, in any medium, provided that you conspicuously and
+appropriately publish on each copy an appropriate copyright notice;
+keep intact all notices stating that this License and any
+non-permissive terms added in accord with section 7 apply to the code;
+keep intact all notices of the absence of any warranty; and give all
+recipients a copy of this License along with the Program.
+
+  You may charge any price or no price for each copy that you convey,
+and you may offer support or warranty protection for a fee.
+
+  5. Conveying Modified Source Versions.
+
+  You may convey a work based on the Program, or the modifications to
+produce it from the Program, in the form of source code under the
+terms of section 4, provided that you also meet all of these conditions:
+
+    a) The work must carry prominent notices stating that you modified
+    it, and giving a relevant date.
+
+    b) The work must carry prominent notices stating that it is
+    released under this License and any conditions added under section
+    7.  This requirement modifies the requirement in section 4 to
+    "keep intact all notices".
+
+    c) You must license the entire work, as a whole, under this
+    License to anyone who comes into possession of a copy.  This
+    License will therefore apply, along with any applicable section 7
+    additional terms, to the whole of the work, and all its parts,
+    regardless of how they are packaged.  This License gives no
+    permission to license the work in any other way, but it does not
+    invalidate such permission if you have separately received it.
+
+    d) If the work has interactive user interfaces, each must display
+    Appropriate Legal Notices; however, if the Program has interactive
+    interfaces that do not display Appropriate Legal Notices, your
+    work need not make them do so.
+
+  A compilation of a covered work with other separate and independent
+works, which are not by their nature extensions of the covered work,
+and which are not combined with it such as to form a larger program,
+in or on a volume of a storage or distribution medium, is called an
+"aggregate" if the compilation and its resulting copyright are not
+used to limit the access or legal rights of the compilation's users
+beyond what the individual works permit.  Inclusion of a covered work
+in an aggregate does not cause this License to apply to the other
+parts of the aggregate.
+
+  6. Conveying Non-Source Forms.
+
+  You may convey a covered work in object code form under the terms
+of sections 4 and 5, provided that you also convey the
+machine-readable Corresponding Source under the terms of this License,
+in one of these ways:
+
+    a) Convey the object code in, or embodied in, a physical product
+    (including a physical distribution medium), accompanied by the
+    Corresponding Source fixed on a durable physical medium
+    customarily used for software interchange.
+
+    b) Convey the object code in, or embodied in, a physical product
+    (including a physical distribution medium), accompanied by a
+    written offer, valid for at least three years and valid for as
+    long as you offer spare parts or customer support for that product
+    model, to give anyone who possesses the object code either (1) a
+    copy of the Corresponding Source for all the software in the
+    product that is covered by this License, on a durable physical
+    medium customarily used for software interchange, for a price no
+    more than your reasonable cost of physically performing this
+    conveying of source, or (2) access to copy the
+    Corresponding Source from a network server at no charge.
+
+    c) Convey individual copies of the object code with a copy of the
+    written offer to provide the Corresponding Source.  This
+    alternative is allowed only occasionally and noncommercially, and
+    only if you received the object code with such an offer, in accord
+    with subsection 6b.
+
+    d) Convey the object code by offering access from a designated
+    place (gratis or for a charge), and offer equivalent access to the
+    Corresponding Source in the same way through the same place at no
+    further charge.  You need not require recipients to copy the
+    Corresponding Source along with the object code.  If the place to
+    copy the object code is a network server, the Corresponding Source
+    may be on a different server (operated by you or a third party)
+    that supports equivalent copying facilities, provided you maintain
+    clear directions next to the object code saying where to find the
+    Corresponding Source.  Regardless of what server hosts the
+    Corresponding Source, you remain obligated to ensure that it is
+    available for as long as needed to satisfy these requirements.
+
+    e) Convey the object code using peer-to-peer transmission, provided
+    you inform other peers where the object code and Corresponding
+    Source of the work are being offered to the general public at no
+    charge under subsection 6d.
+
+  A separable portion of the object code, whose source code is excluded
+from the Corresponding Source as a System Library, need not be
+included in conveying the object code work.
+
+  A "User Product" is either (1) a "consumer product", which means any
+tangible personal property which is normally used for personal, family,
+or household purposes, or (2) anything designed or sold for incorporation
+into a dwelling.  In determining whether a product is a consumer product,
+doubtful cases shall be resolved in favor of coverage.  For a particular
+product received by a particular user, "normally used" refers to a
+typical or common use of that class of product, regardless of the status
+of the particular user or of the way in which the particular user
+actually uses, or expects or is expected to use, the product.  A product
+is a consumer product regardless of whether the product has substantial
+commercial, industrial or non-consumer uses, unless such uses represent
+the only significant mode of use of the product.
+
+  "Installation Information" for a User Product means any methods,
+procedures, authorization keys, or other information required to install
+and execute modified versions of a covered work in that User Product from
+a modified version of its Corresponding Source.  The information must
+suffice to ensure that the continued functioning of the modified object
+code is in no case prevented or interfered with solely because
+modification has been made.
+
+  If you convey an object code work under this section in, or with, or
+specifically for use in, a User Product, and the conveying occurs as
+part of a transaction in which the right of possession and use of the
+User Product is transferred to the recipient in perpetuity or for a
+fixed term (regardless of how the transaction is characterized), the
+Corresponding Source conveyed under this section must be accompanied
+by the Installation Information.  But this requirement does not apply
+if neither you nor any third party retains the ability to install
+modified object code on the User Product (for example, the work has
+been installed in ROM).
+
+  The requirement to provide Installation Information does not include a
+requirement to continue to provide support service, warranty, or updates
+for a work that has been modified or installed by the recipient, or for
+the User Product in which it has been modified or installed.  Access to a
+network may be denied when the modification itself materially and
+adversely affects the operation of the network or violates the rules and
+protocols for communication across the network.
+
+  Corresponding Source conveyed, and Installation Information provided,
+in accord with this section must be in a format that is publicly
+documented (and with an implementation available to the public in
+source code form), and must require no special password or key for
+unpacking, reading or copying.
+
+  7. Additional Terms.
+
+  "Additional permissions" are terms that supplement the terms of this
+License by making exceptions from one or more of its conditions.
+Additional permissions that are applicable to the entire Program shall
+be treated as though they were included in this License, to the extent
+that they are valid under applicable law.  If additional permissions
+apply only to part of the Program, that part may be used separately
+under those permissions, but the entire Program remains governed by
+this License without regard to the additional permissions.
+
+  When you convey a copy of a covered work, you may at your option
+remove any additional permissions from that copy, or from any part of
+it.  (Additional permissions may be written to require their own
+removal in certain cases when you modify the work.)  You may place
+additional permissions on material, added by you to a covered work,
+for which you have or can give appropriate copyright permission.
+
+  Notwithstanding any other provision of this License, for material you
+add to a covered work, you may (if authorized by the copyright holders of
+that material) supplement the terms of this License with terms:
+
+    a) Disclaiming warranty or limiting liability differently from the
+    terms of sections 15 and 16 of this License; or
+
+    b) Requiring preservation of specified reasonable legal notices or
+    author attributions in that material or in the Appropriate Legal
+    Notices displayed by works containing it; or
+
+    c) Prohibiting misrepresentation of the origin of that material, or
+    requiring that modified versions of such material be marked in
+    reasonable ways as different from the original version; or
+
+    d) Limiting the use for publicity purposes of names of licensors or
+    authors of the material; or
+
+    e) Declining to grant rights under trademark law for use of some
+    trade names, trademarks, or service marks; or
+
+    f) Requiring indemnification of licensors and authors of that
+    material by anyone who conveys the material (or modified versions of
+    it) with contractual assumptions of liability to the recipient, for
+    any liability that these contractual assumptions directly impose on
+    those licensors and authors.
+
+  All other non-permissive additional terms are considered "further
+restrictions" within the meaning of section 10.  If the Program as you
+received it, or any part of it, contains a notice stating that it is
+governed by this License along with a term that is a further
+restriction, you may remove that term.  If a license document contains
+a further restriction but permits relicensing or conveying under this
+License, you may add to a covered work material governed by the terms
+of that license document, provided that the further restriction does
+not survive such relicensing or conveying.
+
+  If you add terms to a covered work in accord with this section, you
+must place, in the relevant source files, a statement of the
+additional terms that apply to those files, or a notice indicating
+where to find the applicable terms.
+
+  Additional terms, permissive or non-permissive, may be stated in the
+form of a separately written license, or stated as exceptions;
+the above requirements apply either way.
+
+  8. Termination.
+
+  You may not propagate or modify a covered work except as expressly
+provided under this License.  Any attempt otherwise to propagate or
+modify it is void, and will automatically terminate your rights under
+this License (including any patent licenses granted under the third
+paragraph of section 11).
+
+  However, if you cease all violation of this License, then your
+license from a particular copyright holder is reinstated (a)
+provisionally, unless and until the copyright holder explicitly and
+finally terminates your license, and (b) permanently, if the copyright
+holder fails to notify you of the violation by some reasonable means
+prior to 60 days after the cessation.
+
+  Moreover, your license from a particular copyright holder is
+reinstated permanently if the copyright holder notifies you of the
+violation by some reasonable means, this is the first time you have
+received notice of violation of this License (for any work) from that
+copyright holder, and you cure the violation prior to 30 days after
+your receipt of the notice.
+
+  Termination of your rights under this section does not terminate the
+licenses of parties who have received copies or rights from you under
+this License.  If your rights have been terminated and not permanently
+reinstated, you do not qualify to receive new licenses for the same
+material under section 10.
+
+  9. Acceptance Not Required for Having Copies.
+
+  You are not required to accept this License in order to receive or
+run a copy of the Program.  Ancillary propagation of a covered work
+occurring solely as a consequence of using peer-to-peer transmission
+to receive a copy likewise does not require acceptance.  However,
+nothing other than this License grants you permission to propagate or
+modify any covered work.  These actions infringe copyright if you do
+not accept this License.  Therefore, by modifying or propagating a
+covered work, you indicate your acceptance of this License to do so.
+
+  10. Automatic Licensing of Downstream Recipients.
+
+  Each time you convey a covered work, the recipient automatically
+receives a license from the original licensors, to run, modify and
+propagate that work, subject to this License.  You are not responsible
+for enforcing compliance by third parties with this License.
+
+  An "entity transaction" is a transaction transferring control of an
+organization, or substantially all assets of one, or subdividing an
+organization, or merging organizations.  If propagation of a covered
+work results from an entity transaction, each party to that
+transaction who receives a copy of the work also receives whatever
+licenses to the work the party's predecessor in interest had or could
+give under the previous paragraph, plus a right to possession of the
+Corresponding Source of the work from the predecessor in interest, if
+the predecessor has it or can get it with reasonable efforts.
+
+  You may not impose any further restrictions on the exercise of the
+rights granted or affirmed under this License.  For example, you may
+not impose a license fee, royalty, or other charge for exercise of
+rights granted under this License, and you may not initiate litigation
+(including a cross-claim or counterclaim in a lawsuit) alleging that
+any patent claim is infringed by making, using, selling, offering for
+sale, or importing the Program or any portion of it.
+
+  11. Patents.
+
+  A "contributor" is a copyright holder who authorizes use under this
+License of the Program or a work on which the Program is based.  The
+work thus licensed is called the contributor's "contributor version".
+
+  A contributor's "essential patent claims" are all patent claims
+owned or controlled by the contributor, whether already acquired or
+hereafter acquired, that would be infringed by some manner, permitted
+by this License, of making, using, or selling its contributor version,
+but do not include claims that would be infringed only as a
+consequence of further modification of the contributor version.  For
+purposes of this definition, "control" includes the right to grant
+patent sublicenses in a manner consistent with the requirements of
+this License.
+
+  Each contributor grants you a non-exclusive, worldwide, royalty-free
+patent license under the contributor's essential patent claims, to
+make, use, sell, offer for sale, import and otherwise run, modify and
+propagate the contents of its contributor version.
+
+  In the following three paragraphs, a "patent license" is any express
+agreement or commitment, however denominated, not to enforce a patent
+(such as an express permission to practice a patent or covenant not to
+sue for patent infringement).  To "grant" such a patent license to a
+party means to make such an agreement or commitment not to enforce a
+patent against the party.
+
+  If you convey a covered work, knowingly relying on a patent license,
+and the Corresponding Source of the work is not available for anyone
+to copy, free of charge and under the terms of this License, through a
+publicly available network server or other readily accessible means,
+then you must either (1) cause the Corresponding Source to be so
+available, or (2) arrange to deprive yourself of the benefit of the
+patent license for this particular work, or (3) arrange, in a manner
+consistent with the requirements of this License, to extend the patent
+license to downstream recipients.  "Knowingly relying" means you have
+actual knowledge that, but for the patent license, your conveying the
+covered work in a country, or your recipient's use of the covered work
+in a country, would infringe one or more identifiable patents in that
+country that you have reason to believe are valid.
+
+  If, pursuant to or in connection with a single transaction or
+arrangement, you convey, or propagate by procuring conveyance of, a
+covered work, and grant a patent license to some of the parties
+receiving the covered work authorizing them to use, propagate, modify
+or convey a specific copy of the covered work, then the patent license
+you grant is automatically extended to all recipients of the covered
+work and works based on it.
+
+  A patent license is "discriminatory" if it does not include within
+the scope of its coverage, prohibits the exercise of, or is
+conditioned on the non-exercise of one or more of the rights that are
+specifically granted under this License.  You may not convey a covered
+work if you are a party to an arrangement with a third party that is
+in the business of distributing software, under which you make payment
+to the third party based on the extent of your activity of conveying
+the work, and under which the third party grants, to any of the
+parties who would receive the covered work from you, a discriminatory
+patent license (a) in connection with copies of the covered work
+conveyed by you (or copies made from those copies), or (b) primarily
+for and in connection with specific products or compilations that
+contain the covered work, unless you entered into that arrangement,
+or that patent license was granted, prior to 28 March 2007.
+
+  Nothing in this License shall be construed as excluding or limiting
+any implied license or other defenses to infringement that may
+otherwise be available to you under applicable patent law.
+
+  12. No Surrender of Others' Freedom.
+
+  If conditions are imposed on you (whether by court order, agreement or
+otherwise) that contradict the conditions of this License, they do not
+excuse you from the conditions of this License.  If you cannot convey a
+covered work so as to satisfy simultaneously your obligations under this
+License and any other pertinent obligations, then as a consequence you may
+not convey it at all.  For example, if you agree to terms that obligate you
+to collect a royalty for further conveying from those to whom you convey
+the Program, the only way you could satisfy both those terms and this
+License would be to refrain entirely from conveying the Program.
+
+  13. Use with the GNU Affero General Public License.
+
+  Notwithstanding any other provision of this License, you have
+permission to link or combine any covered work with a work licensed
+under version 3 of the GNU Affero General Public License into a single
+combined work, and to convey the resulting work.  The terms of this
+License will continue to apply to the part which is the covered work,
+but the special requirements of the GNU Affero General Public License,
+section 13, concerning interaction through a network will apply to the
+combination as such.
+
+  14. Revised Versions of this License.
+
+  The Free Software Foundation may publish revised and/or new versions of
+the GNU General Public License from time to time.  Such new versions will
+be similar in spirit to the present version, but may differ in detail to
+address new problems or concerns.
+
+  Each version is given a distinguishing version number.  If the
+Program specifies that a certain numbered version of the GNU General
+Public License "or any later version" applies to it, you have the
+option of following the terms and conditions either of that numbered
+version or of any later version published by the Free Software
+Foundation.  If the Program does not specify a version number of the
+GNU General Public License, you may choose any version ever published
+by the Free Software Foundation.
+
+  If the Program specifies that a proxy can decide which future
+versions of the GNU General Public License can be used, that proxy's
+public statement of acceptance of a version permanently authorizes you
+to choose that version for the Program.
+
+  Later license versions may give you additional or different
+permissions.  However, no additional obligations are imposed on any
+author or copyright holder as a result of your choosing to follow a
+later version.
+
+  15. Disclaimer of Warranty.
+
+  THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY
+APPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT
+HOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM "AS IS" WITHOUT WARRANTY
+OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,
+THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
+PURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM
+IS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF
+ALL NECESSARY SERVICING, REPAIR OR CORRECTION.
+
+  16. Limitation of Liability.
+
+  IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING
+WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS
+THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY
+GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE
+USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF
+DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD
+PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),
+EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF
+SUCH DAMAGES.
+
+  17. Interpretation of Sections 15 and 16.
+
+  If the disclaimer of warranty and limitation of liability provided
+above cannot be given local legal effect according to their terms,
+reviewing courts shall apply local law that most closely approximates
+an absolute waiver of all civil liability in connection with the
+Program, unless a warranty or assumption of liability accompanies a
+copy of the Program in return for a fee.
+
+                     END OF TERMS AND CONDITIONS
+
+            How to Apply These Terms to Your New Programs
+
+  If you develop a new program, and you want it to be of the greatest
+possible use to the public, the best way to achieve this is to make it
+free software which everyone can redistribute and change under these terms.
+
+  To do so, attach the following notices to the program.  It is safest
+to attach them to the start of each source file to most effectively
+state the exclusion of warranty; and each file should have at least
+the "copyright" line and a pointer to where the full notice is found.
+
+    <one line to give the program's name and a brief idea of what it does.>
+    Copyright (C) <year>  <name of author>
+
+    This program is free software: you can redistribute it and/or modify
+    it under the terms of the GNU General Public License as published by
+    the Free Software Foundation, either version 3 of the License, or
+    (at your option) any later version.
+
+    This program is distributed in the hope that it will be useful,
+    but WITHOUT ANY WARRANTY; without even the implied warranty of
+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+    GNU General Public License for more details.
+
+    You should have received a copy of the GNU General Public License
+    along with this program.  If not, see <https://www.gnu.org/licenses/>.
+
+Also add information on how to contact you by electronic and paper mail.
+
+  If the program does terminal interaction, make it output a short
+notice like this when it starts in an interactive mode:
+
+    <program>  Copyright (C) <year>  <name of author>
+    This program comes with ABSOLUTELY NO WARRANTY; for details type `show w'.
+    This is free software, and you are welcome to redistribute it
+    under certain conditions; type `show c' for details.
+
+The hypothetical commands `show w' and `show c' should show the appropriate
+parts of the General Public License.  Of course, your program's commands
+might be different; for a GUI interface, you would use an "about box".
+
+  You should also get your employer (if you work as a programmer) or school,
+if any, to sign a "copyright disclaimer" for the program, if necessary.
+For more information on this, and how to apply and follow the GNU GPL, see
+<https://www.gnu.org/licenses/>.
+
+  The GNU General Public License does not permit incorporating your program
+into proprietary programs.  If your program is a subroutine library, you
+may consider it more useful to permit linking proprietary applications with
+the library.  If this is what you want to do, use the GNU Lesser General
+Public License instead of this License.  But first, please read
+<https://www.gnu.org/licenses/why-not-lgpl.html>.
diff --git a/docs/Makefile.am b/docs/Makefile.am
index 59ade4a87..3f8deccae 100644
--- a/docs/Makefile.am
+++ b/docs/Makefile.am
@@ -59,10 +59,11 @@ EXTRA_DIST =                                    \
  ESNI.md                                        \
  EXPERIMENTAL.md                                \
  FAQ                                            \
  FEATURES                                       \
  GOVERNANCE.md                                  \
+ GPLv3.txt                                      \
  HELP-US.md                                     \
  HISTORY.md                                     \
  HTTP-COOKIES.md                                \
  HTTP2.md                                       \
  HTTP3.md                                       \
@@ -82,10 +83,11 @@ EXTRA_DIST =                                    \
  ROADMAP.md                                     \
  SECURITY-PROCESS.md                            \
  SSL-PROBLEMS.md                                \
  SSLCERTS.md                                    \
  THANKS                                         \
+ TINY-CURL.md                                   \
  TODO                                           \
  TheArtOfHttpScripting                          \
  VERSIONS.md
 
 MAN2HTML= roffit $< >$@
diff --git a/docs/TINY-CURL.md b/docs/TINY-CURL.md
new file mode 100644
index 000000000..cec827709
--- /dev/null
+++ b/docs/TINY-CURL.md
@@ -0,0 +1,108 @@
+# tiny-curl
+
+tiny-curl is a patch set on top of the regular curl source tree to make the
+built libcurl smaller and leaner, at the price of less features.
+
+The goal is to provide libcurl plus wolfSSL within 100K on a 32bit
+architecture.
+
+On x86-64 Linux, the library size is smaller than 25% the size of the
+"regular" distributed libcurl version shipped on Debian.
+
+## Version
+
+This is tiny-curl 7.72.0. It identifies itself as libcurl 7.72.0.
+
+## Features
+
+tiny-curl maintains the libcurl ABI and API. All regular functions and defines
+are present. For functions where functionality has been removed for the sake of
+reducing footprint, libcurl will instead return errors.
+
+The focus on tiny-curl is to maintain HTTPS GET support and all other strong
+sides of libcurl that aren't specifically disabled.
+
+## Removed Features
+
+By default, tiny-curl builds with these features disabled:
+
+- No protocols except HTTP(S) are supported
+- No cookie support
+- No date parsing
+- No alt-svc support
+- No HTTP authentication
+- No DNS-over-HTTPS
+- No .netrc parsing
+- No HTTP multi-part formposts
+- No shuffled DNS support
+- No built-in progress meter
+- No IDN support
+- No HTTP compression
+- No socketpair support
+- Only HTTP/1 and HTTP/0.9 support
+
+All of these features and protocols can be enabled individually at build-time,
+should a user like that. At the expense of a larger footprint of course.
+
+## Portability
+
+In addition to all the platforms the regular curl builds and runs on,
+tiny-curl has been succesfully run on:
+
+ - FreeRTOS
+ - Micrium OS
+
+## License
+
+The tiny-curl patch set is licensed under the GPLv3 license. See docs/GPLv3.txt
+for details.
+
+## Tiny-curl Linux
+
+Example build script for tiny-curl on Linux:
+
+    #!/bin/sh
+    export CFLAGS="-Os -ffunction-sections -fdata-sections -fno-unwind-tables -fno-asynchronous-unwind-tables -flto"
+    export LDFLAGS="-Wl,-s -Wl,-Bsymbolic -Wl,--gc-sections"
+    ./configure \
+    --disable-cookies \
+    --disable-crypto-auth \
+    --disable-dict \
+    --disable-file \
+    --disable-ftp \
+    --disable-gopher \
+    --disable-imap \
+    --disable-ldap \
+    --disable-pop3 \
+    --disable-proxy \
+    --disable-rtmp \
+    --disable-rtsp \
+    --disable-scp \
+    --disable-sftp \
+    --disable-smtp \
+    --disable-telnet \
+    --disable-tftp \
+    --disable-unix-sockets \
+    --disable-verbose \
+    --disable-versioned-symbols \
+    --disable-http-auth \
+    --disable-doh \
+    --disable-mime \
+    --disable-dateparse \
+    --disable-netrc \
+    --disable-dnsshuffle \
+    --disable-progress-meter \
+    --enable-maintainer-mode \
+    --enable-werror \
+    --without-brotli \
+    --without-gssapi \
+    --without-libidn2 \
+    --without-libmetalink \
+    --without-libpsl \
+    --without-librtmp \
+    --without-libssh2 \
+    --without-nghttp2 \
+    --without-ntlm-auth \
+    --without-ssl \
+    --without-zlib \
+    --with-wolfssl=/home/daniel/build-wolfssl
diff --git a/include/curl/curl.h b/include/curl/curl.h
index 5aeaca91d..f78d7e3c2 100644
--- a/include/curl/curl.h
+++ b/include/curl/curl.h
@@ -52,13 +52,15 @@
 #if defined(__FreeBSD__) && (__FreeBSD__ >= 2)
 /* Needed for __FreeBSD_version symbol definition */
 #include <osreldate.h>
 #endif
 
+#ifndef CURL_AVOID_SYS_TYPES_H
 /* The include stuff here below is mainly for time_t! */
 #include <sys/types.h>
 #include <time.h>
+#endif
 
 #if defined(CURL_WIN32) && !defined(_WIN32_WCE) && !defined(__CYGWIN__)
 #if !(defined(_WINSOCKAPI_) || defined(_WINSOCK_H) || \
       defined(__LWIP_OPT_H__) || defined(LWIP_HDR_OPT_H))
 /* The check above prevents the winsock2 inclusion if winsock.h already was
@@ -77,15 +79,17 @@
     defined(__CYGWIN__) || \
    (defined(__FreeBSD_version) && (__FreeBSD_version < 800000))
 #include <sys/select.h>
 #endif
 
-#if !defined(CURL_WIN32) && !defined(_WIN32_WCE)
+#if !defined(CURL_WIN32) && !defined(_WIN32_WCE) &&  \
+  !defined(CURL_AVOID_SYS_SOCKET_H)
 #include <sys/socket.h>
 #endif
 
-#if !defined(CURL_WIN32) && !defined(__WATCOMC__) && !defined(__VXWORKS__)
+#if !defined(CURL_WIN32) && !defined(__WATCOMC__) && !defined(__VXWORKS__) && \
+  !defined(CURL_AVOID_SYS_TIME_H)
 #include <sys/time.h>
 #endif
 
 #ifdef __BEOS__
 #include <support/SupportDefs.h>
@@ -128,11 +132,14 @@ typedef void CURLSH;
 #  define CURL_EXTERN
 #endif
 
 #ifndef curl_socket_typedef
 /* socket typedef */
-#if defined(CURL_WIN32) && !defined(__LWIP_OPT_H__) && !defined(LWIP_HDR_OPT_H)
+#ifdef FreeRTOS
+typedef Socket_t curl_socket_t;
+#define CURL_SOCKET_BAD FREERTOS_INVALID_SOCKET
+#elif defined(CURL_WIN32) && !defined(__LWIP_OPT_H__) && !defined(LWIP_HDR_OPT_H)
 typedef SOCKET curl_socket_t;
 #define CURL_SOCKET_BAD INVALID_SOCKET
 #else
 typedef int curl_socket_t;
 #define CURL_SOCKET_BAD -1
@@ -406,11 +413,11 @@ struct curl_sockaddr {
   int socktype;
   int protocol;
   unsigned int addrlen; /* addrlen was a socklen_t type before 7.18.0 but it
                            turned really ugly and painful on the systems that
                            lack this type */
-  struct sockaddr addr;
+  struct curl_struct_sockaddr addr;
 };
 
 typedef curl_socket_t
 (*curl_opensocket_callback)(void *clientp,
                             curlsocktype purpose,
diff --git a/include/curl/multi.h b/include/curl/multi.h
index b911ba92d..d32918329 100644
--- a/include/curl/multi.h
+++ b/include/curl/multi.h
@@ -154,13 +154,13 @@ CURL_EXTERN CURLMcode curl_multi_remove_handle(CURLM *multi_handle,
   *          them are ready.
   *
   * Returns: CURLMcode type, general multi error code.
   */
 CURL_EXTERN CURLMcode curl_multi_fdset(CURLM *multi_handle,
-                                       fd_set *read_fd_set,
-                                       fd_set *write_fd_set,
-                                       fd_set *exc_fd_set,
+                                       curl_fd_set *read_fd_set,
+                                       curl_fd_set *write_fd_set,
+                                       curl_fd_set *exc_fd_set,
                                        int *max_fd);
 
 /*
  * Name:     curl_multi_wait()
  *
diff --git a/include/curl/system.h b/include/curl/system.h
index 867af6141..8caa3faa6 100644
--- a/include/curl/system.h
+++ b/include/curl/system.h
@@ -346,10 +346,52 @@
 #  endif
 #  define CURL_TYPEOF_CURL_SOCKLEN_T socklen_t
 #  define CURL_PULL_SYS_TYPES_H      1
 #  define CURL_PULL_SYS_SOCKET_H     1
 
+#elif defined(FreeRTOS) /* Life on FreeRTOS */
+
+#if (defined(__SIZEOF_LONG__) && __SIZEOF_LONG__ == 4)  ||      \
+  (defined(__LONG_MAX__) && __LONG_MAX__ == 2147483647L)
+#    define CURL_TYPEOF_CURL_OFF_T     long long
+#    define CURL_FORMAT_CURL_OFF_T     "lld"
+#    define CURL_FORMAT_CURL_OFF_TU    "llu"
+#    define CURL_SUFFIX_CURL_OFF_T     LL
+#    define CURL_SUFFIX_CURL_OFF_TU    ULL
+#else
+#    define CURL_TYPEOF_CURL_OFF_T     long
+#    define CURL_FORMAT_CURL_OFF_T     "ld"
+#    define CURL_FORMAT_CURL_OFF_TU    "lu"
+#    define CURL_SUFFIX_CURL_OFF_T     L
+#    define CURL_SUFFIX_CURL_OFF_TU    UL
+#  endif
+#  define CURL_FREERTOS_SOCKETS_H 1
+#  define CURL_TYPEOF_CURL_SOCKLEN_T uint32_t
+#  define CURL_AVOID_SYS_TYPES_H 1
+#  define CURL_AVOID_SYS_SOCKET_H 1
+
+#elif defined(MICRIUM)
+
+#if (defined(__SIZEOF_LONG__) && __SIZEOF_LONG__ == 4)  ||      \
+  (defined(__LONG_MAX__) && __LONG_MAX__ == 2147483647L)
+#    define CURL_TYPEOF_CURL_OFF_T     long long
+#    define CURL_FORMAT_CURL_OFF_T     "lld"
+#    define CURL_FORMAT_CURL_OFF_TU    "llu"
+#    define CURL_SUFFIX_CURL_OFF_T     LL
+#    define CURL_SUFFIX_CURL_OFF_TU    ULL
+#else
+#    define CURL_TYPEOF_CURL_OFF_T     long
+#    define CURL_FORMAT_CURL_OFF_T     "ld"
+#    define CURL_FORMAT_CURL_OFF_TU    "lu"
+#    define CURL_SUFFIX_CURL_OFF_T     L
+#    define CURL_SUFFIX_CURL_OFF_TU    UL
+#  endif
+#  define CURL_TYPEOF_CURL_SOCKLEN_T CPU_INT32S
+#  define CURL_AVOID_SYS_TYPES_H 1
+#  define CURL_AVOID_SYS_SOCKET_H 1
+#  define CURL_AVOID_SYS_TIME_H 1
+
 /* ===================================== */
 /*    KEEP MSVC THE PENULTIMATE ENTRY    */
 /* ===================================== */
 
 #elif defined(_MSC_VER)
@@ -428,10 +470,44 @@
 /* sys/types.h is required here to properly make type definitions below. */
 #ifdef CURL_PULL_SYS_TYPES_H
 #  include <sys/types.h>
 #endif
 
+#ifdef CURL_FREERTOS_SOCKETS_H
+#  include <FreeRTOS.h>
+#  include <FreeRTOS_Sockets.h>
+#include <stdint.h>
+#include <stddef.h>
+/* for the base type etc */
+#include "portmacro.h"
+#define curl_fd_set_typedefed
+typedef SocketSet_t curl_fd_set;
+#define curl_struct_sockaddr freertos_sockaddr
+#define curl_setsockopt(a,b,c,d,e) FreeRTOS_setsockopt(a,b,c,d,e)
+#define curl_connect(a,b,c) FreeRTOS_connect(a,b,c)
+#define curl_bind(a,b,c) FreeRTOS_bind(a,b,c)
+#define curl_recv(a,b,c,d) FreeRTOS_recv(a,b,c,d)
+#define curl_socket(a,b,c) FreeRTOS_socket(a,b,c)
+/* not quite socket-style API */
+#define CURL_FD_SET(a,b,c) FreeRTOS_FD_SET(a,b,c)
+/* struct sockaddr "fix" */
+#define sa_family sin_family
+/* use our private pollfd struct alternative */
+#define curl_pollfd curl_waitfd
+#elif defined(MICRIUM)
+#include <net/include/net_bsd.h>
+
+/* make use of the types from net_bsd.h */
+typedef _size_t size_t;
+typedef _time_t time_t;
+
+#define curl_fd_set_typedefed
+typedef struct fd_set curl_fd_set;
+
+#endif
+
+
 /* CURL_PULL_SYS_SOCKET_H is defined above when inclusion of header file  */
 /* sys/socket.h is required here to properly make type definitions below. */
 #ifdef CURL_PULL_SYS_SOCKET_H
 #  include <sys/socket.h>
 #endif
@@ -477,10 +553,42 @@
 #else
   /* This compiler is believed NOT to have an ISO compatible preprocessor */
 #undef CURL_ISOCPP
 #endif
 
+/*
+ * For the standard systems
+ */
+#ifndef curl_struct_sockaddr
+#define curl_struct_sockaddr sockaddr
+#endif
+#ifndef curl_fd_set_typedefed
+#define curl_fd_set_typedefed
+typedef fd_set curl_fd_set;
+#endif
+#ifndef curl_pollfd
+#define curl_pollfd pollfd
+#endif
+#ifndef curl_setsockopt
+#define curl_setsockopt(a,b,c,d,e) setsockopt(a,b,c,d,e)
+#endif
+#ifndef curl_bind
+#define curl_bind(a,b,c) bind(a,b,c)
+#endif
+#ifndef curl_connect
+#define curl_connect(a,b,c) connect(a,b,c)
+#endif
+#ifndef curl_recv
+#define curl_recv(a,b,c,d) recv(a,b,c,d)
+#endif
+#ifndef curl_socket
+#define curl_socket(a,b,c) socket(a,b,c)
+#endif
+#ifndef CURL_FD_SET
+#define CURL_FD_SET(a,b,c) FD_SET(a,b)
+#endif
+
 /*
  * Macros for minimum-width signed and unsigned curl_off_t integer constants.
  */
 
 #if defined(__BORLANDC__) && (__BORLANDC__ == 0x0551)
diff --git a/lib/Makefile.am b/lib/Makefile.am
index f2886ec63..7fd82f3e9 100644
--- a/lib/Makefile.am
+++ b/lib/Makefile.am
@@ -28,11 +28,12 @@ EXTRA_DIST = Makefile.m32 config-win32.h config-win32ce.h           \
  makefile.dj config-dos.h libcurl.plist libcurl.rc config-amigaos.h \
  makefile.amiga Makefile.netware nwlib.c nwos.c config-win32ce.h    \
  config-os400.h setup-os400.h config-symbian.h Makefile.Watcom      \
  config-tpf.h mk-ca-bundle.pl mk-ca-bundle.vbs $(CMAKE_DIST)        \
  firefox-db2pem.sh config-vxworks.h Makefile.vxworks checksrc.pl    \
- setup-win32.h
+ setup-win32.h \
+ config-freertos.h config-micrium.h
 
 lib_LTLIBRARIES = libcurl.la
 
 if BUILD_UNITTESTS
 noinst_LTLIBRARIES = libcurlu.la
diff --git a/lib/config-freertos.h b/lib/config-freertos.h
new file mode 100644
index 000000000..9e8955594
--- /dev/null
+++ b/lib/config-freertos.h
@@ -0,0 +1,398 @@
+#ifndef CURL_CONFIG_FREERTOS_H
+#define CURL_CONFIG_FREERTOS_H
+/***************************************************************************
+ *                                  _   _ ____  _
+ *  Project                     ___| | | |  _ \| |
+ *                             / __| | | | |_) | |
+ *                            | (__| |_| |  _ <| |___
+ *                             \___|\___/|_| \_\_____|
+ *
+ * Copyright (C) 2019, Daniel Stenberg, <daniel@haxx.se>, et al.
+ *
+ * This program is free software: you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation, either version 3 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program.  If not, see <https://www.gnu.org/licenses/>.
+ *
+ ***************************************************************************/
+
+/* to disable cookies support */
+#define CURL_DISABLE_COOKIES 1
+
+/* disable HTTP authentication */
+#define CURL_DISABLE_HTTP_AUTH 1
+
+/* disable DoH */
+#define CURL_DISABLE_DOH 1
+
+/* disable mime API */
+#define CURL_DISABLE_MIME 1
+
+/* disable date parsing */
+#define CURL_DISABLE_PARSEDATE 1
+
+/* disable netrc parsing */
+#define CURL_DISABLE_NETRC 1
+
+/* disable DNS shuffling */
+#define CURL_DISABLE_SHUFFLE_DNS 1
+
+/* disable progress-meter */
+#define CURL_DISABLE_PROGRESS_METER 1
+
+/* to disable cryptographic authentication */
+#define CURL_DISABLE_CRYPTO_AUTH 1
+
+/* to disable DICT */
+#define CURL_DISABLE_DICT 1
+
+/* to disable FILE */
+#define CURL_DISABLE_FILE 1
+
+/* to disable FTP */
+#define CURL_DISABLE_FTP 1
+
+/* to disable Gopher */
+#define CURL_DISABLE_GOPHER 1
+
+/* to disable IMAP */
+#define CURL_DISABLE_IMAP 1
+
+/* to disable LDAP */
+#define CURL_DISABLE_LDAP 1
+
+/* to disable LDAPS */
+#define CURL_DISABLE_LDAPS 1
+
+/* to disable POP3 */
+#define CURL_DISABLE_POP3 1
+
+/* to disable proxies */
+#define CURL_DISABLE_PROXY 1
+
+/* to disable RTSP */
+#define CURL_DISABLE_RTSP 1
+
+/* to disable SMB/CIFS */
+#define CURL_DISABLE_SMB 1
+
+/* to disable SMTP */
+#define CURL_DISABLE_SMTP 1
+
+/* to disable TELNET */
+#define CURL_DISABLE_TELNET 1
+
+/* to disable TFTP */
+#define CURL_DISABLE_TFTP 1
+
+/* to disable verbose strings */
+#define CURL_DISABLE_VERBOSE_STRINGS 1
+
+/* Definition to make a library symbol externally visible. */
+#define CURL_EXTERN_SYMBOL __attribute__ ((__visibility__ ("default")))
+
+/* IP address type in sockaddr */
+#define CURL_SA_FAMILY_T uint8_t
+
+/* lack of non-blocking support */
+#define USE_BLOCKING_SOCKETS 1
+
+/* Define to the type of arg 2 for gethostname. */
+#define GETHOSTNAME_TYPE_ARG2 size_t
+
+/* Specifies the number of arguments to getservbyport_r */
+#define GETSERVBYPORT_R_ARGS 6
+
+/* Specifies the size of the buffer to pass to getservbyport_r */
+#define GETSERVBYPORT_R_BUFSIZE 4096
+
+/* Define to 1 if you have the <alloca.h> header file. */
+#define HAVE_ALLOCA_H 1
+
+/* Define to 1 if you have the <arpa/inet.h> header file. */
+
+/* Define to 1 if you have the <arpa/tftp.h> header file. */
+
+/* Define to 1 if you have the <assert.h> header file. */
+#define HAVE_ASSERT_H 1
+
+/* Define to 1 if you have the basename function. */
+#define HAVE_BASENAME 1
+
+/* Define to 1 if bool is an available type. */
+#define HAVE_BOOL_T 1
+
+/* Define to 1 if you have the connect function. */
+#define HAVE_CONNECT 1
+
+/* Define to 1 if you have the <cyassl/error-ssl.h> header file. */
+#define HAVE_CYASSL_ERROR_SSL_H 1
+
+/* Define to 1 if you have the <cyassl/options.h> header file. */
+#define HAVE_CYASSL_OPTIONS_H 1
+
+/* Define to 1 if you have the declaration of `getpwuid_r', and to 0 if you
+   don't. */
+#define HAVE_DECL_GETPWUID_R 1
+
+/* Define to 1 if you have the <errno.h> header file. */
+#define HAVE_ERRNO_H 1
+
+/* Define to 1 if you have the gethostbyname function. */
+#define HAVE_GETHOSTBYNAME 1
+
+/* Define to 1 if you have the <inttypes.h> header file. */
+#define HAVE_INTTYPES_H 1
+
+/* Define to 1 if you have the <linux/tcp.h> header file. */
+
+/* if your compiler supports LL */
+#define HAVE_LL 1
+
+/* Define to 1 if the compiler supports the 'long long' data type. */
+#define HAVE_LONGLONG 1
+
+/* Define to 1 if you have the malloc.h header file. */
+#define HAVE_MALLOC_H 1
+
+/* Define to 1 if you have the memory.h header file. */
+#define HAVE_MEMORY_H 1
+
+/* Define to 1 if you have the <netdb.h> header file. */
+
+/* Define to 1 if you have the <netinet/in.h> header file. */
+
+/* Define to 1 if you have the <netinet/tcp.h> header file. */
+
+/* Define to 1 if you have the <net/if.h> header file. */
+
+/* Define to 1 if you have the recv function. */
+#define HAVE_RECV 1
+
+/* Define to 1 if you have the select function. */
+#define HAVE_SELECT 1
+
+/* Define to 1 if you have the send function. */
+#define HAVE_SEND 1
+
+/* Define to 1 if you have the <setjmp.h> header file. */
+#define HAVE_SETJMP_H 1
+
+/* Define to 1 if you have the setsockopt function. */
+#define HAVE_SETSOCKOPT 1
+
+/* Define to 1 if you have the socket function. */
+#define HAVE_SOCKET 1
+
+/* Define to 1 if you have the <stdbool.h> header file. */
+#define HAVE_STDBOOL_H 1
+
+/* Define to 1 if you have the <stdint.h> header file. */
+#define HAVE_STDINT_H 1
+
+/* Define to 1 if you have the <stdio.h> header file. */
+#define HAVE_STDIO_H 1
+
+/* Define to 1 if you have the <stdlib.h> header file. */
+#define HAVE_STDLIB_H 1
+
+/* Define to 1 if you have the strcasecmp function. */
+#define HAVE_STRCASECMP 1
+
+/* Define to 1 if you have the strdup function. */
+#define HAVE_STRDUP 1
+
+/* Define to 1 if you have the <strings.h> header file. */
+#define HAVE_STRINGS_H 1
+
+/* Define to 1 if you have the <string.h> header file. */
+#define HAVE_STRING_H 1
+
+/* Define to 1 if you have the strncasecmp function. */
+#define HAVE_STRNCASECMP 1
+
+/* Define to 1 if you have the <stropts.h> header file. */
+
+/* Define to 1 if you have the strstr function. */
+#define HAVE_STRSTR 1
+
+/* Define to 1 if you have the strtok_r function. */
+#define HAVE_STRTOK_R 1
+
+/* Define to 1 if you have the strtoll function. */
+#define HAVE_STRTOLL 1
+
+/* if struct sockaddr_storage is defined */
+#define HAVE_STRUCT_SOCKADDR_STORAGE 1
+
+/* Define to 1 if you have the timeval struct. */
+#define HAVE_STRUCT_TIMEVAL 1
+
+/* Define to 1 if you have the <sys/resource.h> header file. */
+#define HAVE_SYS_RESOURCE_H 1
+
+/* Define to 1 if you have the <sys/stat.h> header file. */
+#define HAVE_SYS_STAT_H 1
+
+/* Define to 1 if you have the <sys/types.h> header file. */
+#define HAVE_SYS_TYPES_H 1
+
+/* Define to 1 if you have the <sys/uio.h> header file. */
+#define HAVE_SYS_UIO_H 1
+
+/* Define to 1 if you have the <sys/un.h> header file. */
+
+/* Define to 1 if you have the <sys/wait.h> header file. */
+#define HAVE_SYS_WAIT_H 1
+
+/* Define to 1 if you have the <sys/xattr.h> header file. */
+#define HAVE_SYS_XATTR_H 1
+
+/* Define to 1 if you have the <termios.h> header file. */
+#define HAVE_TERMIOS_H 1
+
+/* Define to 1 if you have the <termio.h> header file. */
+#define HAVE_TERMIO_H 1
+
+/* Define to 1 if you have the <time.h> header file. */
+#define HAVE_TIME_H 1
+
+/* Define to 1 if you have the `utime' function. */
+#define HAVE_UTIME 1
+
+/* Define to 1 if you have the `utimes' function. */
+#define HAVE_UTIMES 1
+
+/* Define to 1 if you have the <utime.h> header file. */
+#define HAVE_UTIME_H 1
+
+/* Define to 1 if compiler supports C99 variadic macro style. */
+#define HAVE_VARIADIC_MACROS_C99 1
+
+/* Define to 1 if compiler supports old gcc variadic macro style. */
+#define HAVE_VARIADIC_MACROS_GCC 1
+
+/* Define to 1 if you have the `wolfSSL_CTX_UseSupportedCurve' function. */
+#define HAVE_WOLFSSL_CTX_USESUPPORTEDCURVE 1
+
+/* Define to 1 if you have the `wolfSSL_get_peer_certificate' function. */
+#define HAVE_WOLFSSL_GET_PEER_CERTIFICATE 1
+
+/* Define to 1 if you have the writev function. */
+#define HAVE_WRITEV 1
+
+/* cpu-machine-OS */
+#define OS "x86_64-freertos"
+
+/* Define to the type of arg 1 for recv. */
+#define RECV_TYPE_ARG1 Socket_t
+
+/* Define to the type of arg 2 for recv. */
+#define RECV_TYPE_ARG2 void *
+
+/* Define to the type of arg 3 for recv. */
+#define RECV_TYPE_ARG3 size_t
+
+/* Define to the type of arg 4 for recv. */
+#define RECV_TYPE_ARG4 long
+
+/* Define to the function return type for recv. */
+#define RECV_TYPE_RETV long
+
+/* Define as the return type of signal handlers (`int' or `void'). */
+#define RETSIGTYPE void
+
+/* Define to the type qualifier of arg 5 for select. */
+#define SELECT_QUAL_ARG5
+
+/* Define to the type of arg 1 for select. */
+#define SELECT_TYPE_ARG1 int
+
+/* Define to the type of args 2, 3 and 4 for select. */
+#define SELECT_TYPE_ARG234 fd_set *
+
+/* Define to the type of arg 5 for select. */
+#define SELECT_TYPE_ARG5 struct timeval *
+
+/* Define to the function return type for select. */
+#define SELECT_TYPE_RETV int
+
+/* Define to the type qualifier of arg 2 for send. */
+#define SEND_QUAL_ARG2 const
+
+/* Define to the type of arg 1 for send. */
+#define SEND_TYPE_ARG1 int
+
+/* Define to the type of arg 2 for send. */
+#define SEND_TYPE_ARG2 void *
+
+/* Define to the type of arg 3 for send. */
+#define SEND_TYPE_ARG3 size_t
+
+/* Define to the type of arg 4 for send. */
+#define SEND_TYPE_ARG4 int
+
+/* Define to the function return type for send. */
+#define SEND_TYPE_RETV ssize_t
+
+#define ssize_t int
+
+/* The number of bytes in type curl_off_t */
+#define SIZEOF_CURL_OFF_T 8
+
+/* The number of bytes in type int */
+#define SIZEOF_INT 4
+
+/* The number of bytes in type long */
+#define SIZEOF_LONG 4
+
+/* The number of bytes in type long long */
+#define SIZEOF_LONG_LONG 8
+
+/* The number of bytes in type off_t */
+#define SIZEOF_OFF_T 8
+
+/* The number of bytes in type short */
+#define SIZEOF_SHORT 2
+
+/* The number of bytes in type size_t */
+#define SIZEOF_SIZE_T 8
+
+/* The number of bytes in type time_t */
+#define SIZEOF_TIME_T 8
+
+/* Define to 1 if you have the ANSI C header files. */
+#define STDC_HEADERS 1
+
+/* Define to 1 if you can safely include both <sys/time.h> and <time.h>. */
+#define TIME_WITH_SYS_TIME 1
+
+/* if CyaSSL/WolfSSL is enabled */
+#define USE_CYASSL 1
+
+/* Version number of package */
+#define VERSION "-"
+
+/* Define to 1 if OS is AIX. */
+#ifndef _ALL_SOURCE
+/* #  undef _ALL_SOURCE */
+#endif
+
+/* Work-around to allow building the Windows FreeRTOS simulator */
+#define ALLOW_MSVC6_WITHOUT_PSDK 1
+
+/* Define to `__inline__' or `__inline' if that's what the C compiler
+   calls it, or to nothing if 'inline' is not supported under any name.  */
+#ifndef __cplusplus
+/* #undef inline */
+#endif
+
+#endif /* CURL_CONFIG_FREERTOS_H */
diff --git a/lib/config-micrium.h b/lib/config-micrium.h
new file mode 100644
index 000000000..931978c74
--- /dev/null
+++ b/lib/config-micrium.h
@@ -0,0 +1,439 @@
+#ifndef CURL_CONFIG_MICRIUM_H
+#define CURL_CONFIG_MICRIUM_H
+/***************************************************************************
+ *                                  _   _ ____  _
+ *  Project                     ___| | | |  _ \| |
+ *                             / __| | | | |_) | |
+ *                            | (__| |_| |  _ <| |___
+ *                             \___|\___/|_| \_\_____|
+ *
+ * Copyright (C) 2020, Daniel Stenberg, <daniel@haxx.se>, et al.
+ *
+ * This program is free software: you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation, either version 3 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program.  If not, see <https://www.gnu.org/licenses/>.
+ *
+ ***************************************************************************/
+
+#define CURL_DISABLE_SOCKETPAIR 1
+
+/* to disable cookies support */
+#define CURL_DISABLE_COOKIES 1
+
+/* disable HTTP authentication */
+#define CURL_DISABLE_HTTP_AUTH 1
+
+/* disable DoH */
+#define CURL_DISABLE_DOH 1
+
+/* disable mime API */
+#define CURL_DISABLE_MIME 1
+
+/* disable date parsing */
+#define CURL_DISABLE_PARSEDATE 1
+
+/* disable netrc parsing */
+#define CURL_DISABLE_NETRC 1
+
+/* disable DNS shuffling */
+#define CURL_DISABLE_SHUFFLE_DNS 1
+
+/* disable progress-meter */
+#define CURL_DISABLE_PROGRESS_METER 1
+
+/* to disable cryptographic authentication */
+#define CURL_DISABLE_CRYPTO_AUTH 1
+
+/* to disable DICT */
+#define CURL_DISABLE_DICT 1
+
+/* to disable FILE */
+#define CURL_DISABLE_FILE 1
+
+/* to disable FTP */
+#define CURL_DISABLE_FTP 1
+
+/* to disable Gopher */
+#define CURL_DISABLE_GOPHER 1
+
+/* to disable IMAP */
+#define CURL_DISABLE_IMAP 1
+
+/* to disable LDAP */
+#define CURL_DISABLE_LDAP 1
+
+/* to disable LDAPS */
+#define CURL_DISABLE_LDAPS 1
+
+/* to disable POP3 */
+#define CURL_DISABLE_POP3 1
+
+/* to disable proxies */
+#define CURL_DISABLE_PROXY 1
+
+/* to disable RTSP */
+#define CURL_DISABLE_RTSP 1
+
+/* to disable SMB/CIFS */
+#define CURL_DISABLE_SMB 1
+
+/* to disable SMTP */
+#define CURL_DISABLE_SMTP 1
+
+/* to disable TELNET */
+#define CURL_DISABLE_TELNET 1
+
+/* to disable TFTP */
+#define CURL_DISABLE_TFTP 1
+
+/* to disable verbose strings */
+#define CURL_DISABLE_VERBOSE_STRINGS 1
+
+/* Definition to make a library symbol externally visible. */
+#define CURL_EXTERN_SYMBOL __attribute__ ((__visibility__ ("default")))
+
+/* IP address type in sockaddr */
+#define CURL_SA_FAMILY_T uint8_t
+
+/* lack of non-blocking support */
+#define USE_BLOCKING_SOCKETS 1
+
+/* Define to the type of arg 2 for gethostname. */
+#define GETHOSTNAME_TYPE_ARG2 size_t
+
+/* Specifies the number of arguments to getservbyport_r */
+#define GETSERVBYPORT_R_ARGS 6
+
+/* Specifies the size of the buffer to pass to getservbyport_r */
+#define GETSERVBYPORT_R_BUFSIZE 4096
+
+/* Define to 1 if you have the <alloca.h> header file. */
+#define HAVE_ALLOCA_H 1
+
+/* Define to 1 if you have the <arpa/inet.h> header file. */
+
+/* Define to 1 if you have the <arpa/tftp.h> header file. */
+
+/* Define to 1 if you have the <assert.h> header file. */
+#define HAVE_ASSERT_H 1
+
+/* Define to 1 if you have the basename function. */
+#define HAVE_BASENAME 1
+
+/* Define to 1 if bool is an available type. */
+#define HAVE_BOOL_T 1
+
+/* Define to 1 if you have the connect function. */
+#define HAVE_CONNECT 1
+
+/* Define to 1 if you have the <cyassl/error-ssl.h> header file. */
+#define HAVE_CYASSL_ERROR_SSL_H 1
+
+/* Define to 1 if you have the <cyassl/options.h> header file. */
+#define HAVE_CYASSL_OPTIONS_H 1
+
+/* Define to 1 if you have the declaration of `getpwuid_r', and to 0 if you
+   don't. */
+#define HAVE_DECL_GETPWUID_R 1
+
+/* Define to 1 if you have the <errno.h> header file. */
+#define HAVE_ERRNO_H 1
+
+/* Define to 1 if you have the gethostbyname function. */
+//#define HAVE_GETHOSTBYNAME 1
+
+#define CURLRES_IPV6
+
+#define HAVE_GETADDRINFO 1
+
+/* Define to 1 if you have the <inttypes.h> header file. */
+#define HAVE_INTTYPES_H 1
+
+/* Define to 1 if you have the <linux/tcp.h> header file. */
+
+/* if your compiler supports LL */
+#define HAVE_LL 1
+
+/* Define to 1 if the compiler supports the 'long long' data type. */
+#define HAVE_LONGLONG 1
+
+/* Define to 1 if you have the malloc.h header file. */
+#define HAVE_MALLOC_H 1
+
+/* Define to 1 if you have the memory.h header file. */
+#define HAVE_MEMORY_H 1
+
+/* Define to 1 if you have the <netdb.h> header file. */
+#define HAVE_NETDB_H
+
+/* Define to 1 if you have the <netinet/in.h> header file. */
+
+/* Define to 1 if you have the <netinet/tcp.h> header file. */
+
+/* Define to 1 if you have the <net/if.h> header file. */
+
+/* Define to 1 if you have the recv function. */
+#define HAVE_RECV 1
+
+/* Define to 1 if you have the select function. */
+#define HAVE_SELECT 1
+
+/* Define to 1 if you have the send function. */
+#define HAVE_SEND 1
+
+/* Define to 1 if you have the <setjmp.h> header file. */
+//#define HAVE_SETJMP_H 1
+
+/* Define to 1 if you have the setsockopt function. */
+#define HAVE_SETSOCKOPT 1
+
+/* Define to 1 if you have the socket function. */
+#define HAVE_SOCKET 1
+
+/* Define to 1 if you have the <stdbool.h> header file. */
+#define HAVE_STDBOOL_H 1
+
+/* Define to 1 if you have the <stdint.h> header file. */
+#define HAVE_STDINT_H 1
+
+/* Define to 1 if you have the <stdio.h> header file. */
+#define HAVE_STDIO_H 1
+
+/* Define to 1 if you have the <stdlib.h> header file. */
+#define HAVE_STDLIB_H 1
+
+/* Define to 1 if you have the strcasecmp function. */
+#define HAVE_STRCASECMP 1
+
+/* Define to 1 if you have the strdup function. */
+#define HAVE_STRDUP 1
+
+/* Define to 1 if you have the <strings.h> header file. */
+#define HAVE_STRINGS_H 1
+
+/* Define to 1 if you have the <string.h> header file. */
+#define HAVE_STRING_H 1
+
+/* Define to 1 if you have the strncasecmp function. */
+#define HAVE_STRNCASECMP 1
+
+/* Define to 1 if you have the <stropts.h> header file. */
+
+/* Define to 1 if you have the strstr function. */
+#define HAVE_STRSTR 1
+
+/* Define to 1 if you have the strtok_r function. */
+#define HAVE_STRTOK_R 1
+
+/* Define to 1 if you have the strtoll function. */
+#define HAVE_STRTOLL 1
+
+/* if struct sockaddr_storage is defined */
+//#define HAVE_STRUCT_SOCKADDR_STORAGE 1
+
+/* Define to 1 if you have the timeval struct. */
+#define HAVE_STRUCT_TIMEVAL 1
+
+/* Define to 1 if you have the <sys/resource.h> header file. */
+#define HAVE_SYS_RESOURCE_H 1
+
+/* Define to 1 if you have the <sys/stat.h> header file. */
+//#define HAVE_SYS_STAT_H 1
+
+/* Define to 1 if you have the <sys/types.h> header file. */
+//#define HAVE_SYS_TYPES_H 1
+
+/* Define to 1 if you have the <sys/uio.h> header file. */
+#define HAVE_SYS_UIO_H 1
+
+/* Define to 1 if you have the <sys/un.h> header file. */
+
+/* Define to 1 if you have the <sys/wait.h> header file. */
+#define HAVE_SYS_WAIT_H 1
+
+/* Define to 1 if you have the <sys/xattr.h> header file. */
+#define HAVE_SYS_XATTR_H 1
+
+/* Define to 1 if you have the <termios.h> header file. */
+#define HAVE_TERMIOS_H 1
+
+/* Define to 1 if you have the <termio.h> header file. */
+#define HAVE_TERMIO_H 1
+
+/* Define to 1 if you have the <time.h> header file. */
+#define HAVE_TIME_H 1
+
+/* Define to 1 if you have the `utime' function. */
+#define HAVE_UTIME 1
+
+/* Define to 1 if you have the `utimes' function. */
+#define HAVE_UTIMES 1
+
+/* Define to 1 if you have the <utime.h> header file. */
+#define HAVE_UTIME_H 1
+
+/* Define to 1 if compiler supports C99 variadic macro style. */
+#define HAVE_VARIADIC_MACROS_C99 1
+
+/* Define to 1 if compiler supports old gcc variadic macro style. */
+#define HAVE_VARIADIC_MACROS_GCC 1
+
+/* Define to 1 if you have the `wolfSSL_CTX_UseSupportedCurve' function. */
+#define HAVE_WOLFSSL_CTX_USESUPPORTEDCURVE 1
+
+/* Define to 1 if you have the `wolfSSL_get_peer_certificate' function. */
+#define HAVE_WOLFSSL_GET_PEER_CERTIFICATE 1
+
+/* Define to 1 if you have the writev function. */
+#define HAVE_WRITEV 1
+
+/* cpu-machine-OS */
+#define OS "x86_64-micrium"
+
+/* Define to the type of arg 1 for recv. */
+#define RECV_TYPE_ARG1 int
+
+/* Define to the type of arg 2 for recv. */
+#define RECV_TYPE_ARG2 void *
+
+/* Define to the type of arg 3 for recv. */
+#define RECV_TYPE_ARG3 size_t
+
+/* Define to the type of arg 4 for recv. */
+#define RECV_TYPE_ARG4 long
+
+/* Define to the function return type for recv. */
+#define RECV_TYPE_RETV long
+
+/* Define as the return type of signal handlers (`int' or `void'). */
+#define RETSIGTYPE void
+
+/* Define to the type qualifier of arg 5 for select. */
+#define SELECT_QUAL_ARG5
+
+/* Define to the type of arg 1 for select. */
+#define SELECT_TYPE_ARG1 int
+
+/* Define to the type of args 2, 3 and 4 for select. */
+#define SELECT_TYPE_ARG234 fd_set *
+
+/* Define to the type of arg 5 for select. */
+#define SELECT_TYPE_ARG5 struct timeval *
+
+/* Define to the function return type for select. */
+#define SELECT_TYPE_RETV int
+
+/* Define to the type qualifier of arg 2 for send. */
+#define SEND_QUAL_ARG2 
+
+/* Define to the type of arg 1 for send. */
+#define SEND_TYPE_ARG1 int
+
+/* Define to the type of arg 2 for send. */
+#define SEND_TYPE_ARG2 void *
+
+/* Define to the type of arg 3 for send. */
+#define SEND_TYPE_ARG3 size_t
+
+/* Define to the type of arg 4 for send. */
+#define SEND_TYPE_ARG4 int
+
+/* Define to the function return type for send. */
+#define SEND_TYPE_RETV ssize_t
+
+//#define ssize_t int
+
+/* The number of bytes in type curl_off_t */
+#define SIZEOF_CURL_OFF_T 8
+
+/* The number of bytes in type int */
+#define SIZEOF_INT 4
+
+/* The number of bytes in type long */
+#define SIZEOF_LONG 4
+
+/* The number of bytes in type long long */
+#define SIZEOF_LONG_LONG 8
+
+/* The number of bytes in type off_t */
+#define SIZEOF_OFF_T 8
+
+/* The number of bytes in type short */
+#define SIZEOF_SHORT 2
+
+/* The number of bytes in type size_t */
+#define SIZEOF_SIZE_T 8
+
+/* The number of bytes in type time_t */
+#define SIZEOF_TIME_T 8
+
+/* Define to 1 if you have the ANSI C header files. */
+#define STDC_HEADERS 1
+
+/* Define to 1 if you can safely include both <sys/time.h> and <time.h>. */
+#define TIME_WITH_SYS_TIME 1
+
+/* if CyaSSL/WolfSSL is enabled */
+#define USE_CYASSL 1
+
+/* Version number of package */
+#define VERSION "-"
+
+/* Define to 1 if OS is AIX. */
+#ifndef _ALL_SOURCE
+/* #  undef _ALL_SOURCE */
+#endif
+
+/* Work-around to allow building the Windows Micrium simulator */
+#define ALLOW_MSVC6_WITHOUT_PSDK 1
+
+/* sys/timeval.h work-arounds */
+#define _SUSECONDS_T_DECLARED
+#define _TIME_T_DECLARED
+#define _TIMEVAL_DEFINED
+
+/* avoid sys/select.h */
+#define _SYS_SELECT_H
+/* avoid sys/types.h */
+#define _SYS_TYPES_H
+
+#if 0
+#define _STDIO_H_
+typedef void * FILE;
+
+/* these don't actually exist */
+#define stdin NULL
+#define stdout NULL
+#define stderr NULL
+#define fwrite NULL
+#define fread NULL
+#else
+typedef long long off_t;
+typedef unsigned int clock_t;
+#endif
+
+#define USHRT_MAX UINT16_MAX
+#define INT_MAX INT32_MAX
+#define UINT_MAX UINT32_MAX
+#define LONG_MAX INT32_MAX /* ? */
+#define LONG_MIN INT32_MIN /* ? */
+
+
+#define PF_UNSPEC AF_UNSPEC
+
+/* Define to `__inline__' or `__inline' if that's what the C compiler
+   calls it, or to nothing if 'inline' is not supported under any name.  */
+#ifndef __cplusplus
+/* #undef inline */
+#endif
+
+#endif /* CURL_CONFIG_MICRIUM_H */
diff --git a/lib/connect.c b/lib/connect.c
index b000b1b2c..4b5ac973f 100644
--- a/lib/connect.c
+++ b/lib/connect.c
@@ -112,12 +112,12 @@ tcpkeepalive(struct Curl_easy *data,
              curl_socket_t sockfd)
 {
   int optval = data->set.tcp_keepalive?1:0;
 
   /* only set IDLE and INTVL if setting KEEPALIVE is successful */
-  if(setsockopt(sockfd, SOL_SOCKET, SO_KEEPALIVE,
-        (void *)&optval, sizeof(optval)) < 0) {
+  if(curl_setsockopt(sockfd, SOL_SOCKET, SO_KEEPALIVE,
+                     (void *)&optval, sizeof(optval)) < 0) {
     infof(data, "Failed to set SO_KEEPALIVE on fd %d\n", sockfd);
   }
   else {
 #if defined(SIO_KEEPALIVE_VALS)
     struct tcp_keepalive vals;
@@ -136,20 +136,20 @@ tcpkeepalive(struct Curl_easy *data,
     }
 #else
 #ifdef TCP_KEEPIDLE
     optval = curlx_sltosi(data->set.tcp_keepidle);
     KEEPALIVE_FACTOR(optval);
-    if(setsockopt(sockfd, IPPROTO_TCP, TCP_KEEPIDLE,
-          (void *)&optval, sizeof(optval)) < 0) {
+    if(curl_setsockopt(sockfd, IPPROTO_TCP, TCP_KEEPIDLE,
+                       (void *)&optval, sizeof(optval)) < 0) {
       infof(data, "Failed to set TCP_KEEPIDLE on fd %d\n", sockfd);
     }
 #endif
 #ifdef TCP_KEEPINTVL
     optval = curlx_sltosi(data->set.tcp_keepintvl);
     KEEPALIVE_FACTOR(optval);
-    if(setsockopt(sockfd, IPPROTO_TCP, TCP_KEEPINTVL,
-          (void *)&optval, sizeof(optval)) < 0) {
+    if(curl_setsockopt(sockfd, IPPROTO_TCP, TCP_KEEPINTVL,
+                       (void *)&optval, sizeof(optval)) < 0) {
       infof(data, "Failed to set TCP_KEEPINTVL on fd %d\n", sockfd);
     }
 #endif
 #ifdef TCP_KEEPALIVE
     /* Mac OS X style */
@@ -245,11 +245,12 @@ static CURLcode bindlocal(struct connectdata *conn,
                           curl_socket_t sockfd, int af, unsigned int scope)
 {
   struct Curl_easy *data = conn->data;
 
   struct Curl_sockaddr_storage sa;
-  struct sockaddr *sock = (struct sockaddr *)&sa;  /* bind to this address */
+  struct curl_struct_sockaddr *sock =
+    (struct curl_struct_sockaddr *)&sa;  /* bind to this address */
   curl_socklen_t sizeof_sa = 0; /* size of the data sock points to */
   struct sockaddr_in *si4 = (struct sockaddr_in *)&sa;
 #ifdef ENABLE_IPV6
   struct sockaddr_in6 *si6 = (struct sockaddr_in6 *)&sa;
 #endif
@@ -304,12 +305,12 @@ static CURLcode bindlocal(struct connectdata *conn,
        *
        * interface might be a VRF, eg: vrf-blue, which means it cannot be
        * converted to an IP address and would fail Curl_if2ip. Simply try
        * to use it straight away.
        */
-      if(setsockopt(sockfd, SOL_SOCKET, SO_BINDTODEVICE,
-                    dev, (curl_socklen_t)strlen(dev) + 1) == 0) {
+      if(curl_setsockopt(sockfd, SOL_SOCKET, SO_BINDTODEVICE,
+                         dev, (curl_socklen_t)strlen(dev) + 1) == 0) {
         /* This is typically "errno 1, error: Operation not permitted" if
          * you're not running as root or another suitable privileged
          * user.
          * If it succeeds it means the parameter was a valid interface and
          * not an IP address. Return immediately.
@@ -446,22 +447,24 @@ static CURLcode bindlocal(struct connectdata *conn,
       sizeof_sa = sizeof(struct sockaddr_in);
     }
   }
 
   for(;;) {
-    if(bind(sockfd, sock, sizeof_sa) >= 0) {
+    if(curl_bind(sockfd, sock, sizeof_sa) >= 0) {
       /* we succeeded to bind */
+#ifdef HAVE_GETSOCKNAME
       struct Curl_sockaddr_storage add;
       curl_socklen_t size = sizeof(add);
       memset(&add, 0, sizeof(struct Curl_sockaddr_storage));
       if(getsockname(sockfd, (struct sockaddr *) &add, &size) < 0) {
         char buffer[STRERROR_LEN];
         data->state.os_errno = error = SOCKERRNO;
         failf(data, "getsockname() failed with errno %d: %s",
               error, Curl_strerror(error, buffer, sizeof(buffer)));
         return CURLE_INTERFACE_FAILED;
       }
+#endif
       infof(data, "Local port: %hu\n", port);
       conn->bits.bound = TRUE;
       return CURLE_OK;
     }
 
@@ -487,10 +490,11 @@ static CURLcode bindlocal(struct connectdata *conn,
   }
 
   return CURLE_INTERFACE_FAILED;
 }
 
+#ifdef HAVE_GETSOCKOPT
 /*
  * verifyconnect() returns TRUE if the connect really has happened.
  */
 static bool verifyconnect(curl_socket_t sockfd, int *error)
 {
@@ -553,10 +557,14 @@ static bool verifyconnect(curl_socket_t sockfd, int *error)
   if(error)
     *error = SOCKERRNO;
 #endif
   return rc;
 }
+#else
+#define verifyconnect(x,y) TRUE
+#endif
+
 
 /* update tempaddr[tempindex] (to the next entry), makes sure to stick
    to the correct family */
 static struct Curl_addrinfo *ainext(struct connectdata *conn,
                                     int tempindex,
@@ -1026,12 +1034,12 @@ static void tcpnodelay(struct connectdata *conn, curl_socket_t sockfd)
   char buffer[STRERROR_LEN];
 #else
   (void) conn;
 #endif
 
-  if(setsockopt(sockfd, level, TCP_NODELAY, (void *)&onoff,
-                sizeof(onoff)) < 0)
+  if(curl_setsockopt(sockfd, level, TCP_NODELAY, (void *)&onoff,
+                     sizeof(onoff)) < 0)
     infof(data, "Could not set TCP_NODELAY: %s\n",
           Curl_strerror(SOCKERRNO, buffer, sizeof(buffer)));
 #else
   (void)conn;
   (void)sockfd;
@@ -1227,30 +1235,30 @@ static CURLcode singleipconnect(struct connectdata *conn,
         rc = connectx(sockfd, &endpoints, SAE_ASSOCID_ANY,
                       CONNECT_RESUME_ON_READ_WRITE | CONNECT_DATA_IDEMPOTENT,
                       NULL, 0, NULL, NULL);
       }
       else {
-        rc = connect(sockfd, &addr.sa_addr, addr.addrlen);
+        rc = curl_connect(sockfd, &addr.sa_addr, addr.addrlen);
       }
 #  else
-      rc = connect(sockfd, &addr.sa_addr, addr.addrlen);
+      rc = curl_connect(sockfd, &addr.sa_addr, addr.addrlen);
 #  endif /* HAVE_BUILTIN_AVAILABLE */
-#elif defined(TCP_FASTOPEN_CONNECT) /* Linux >= 4.11 */
+#elif defined(HAVE_TCP_FASTOPEN_CONNECT) /* Linux >= 4.11 */
       if(setsockopt(sockfd, IPPROTO_TCP, TCP_FASTOPEN_CONNECT,
                     (void *)&optval, sizeof(optval)) < 0)
         infof(data, "Failed to enable TCP Fast Open on fd %d\n", sockfd);
 
       rc = connect(sockfd, &addr.sa_addr, addr.addrlen);
-#elif defined(MSG_FASTOPEN) /* old Linux */
+#elif defined(HAVE_MSG_FASTOPEN) /* old Linux */
       if(conn->given->flags & PROTOPT_SSL)
         rc = connect(sockfd, &addr.sa_addr, addr.addrlen);
       else
         rc = 0; /* Do nothing */
 #endif
     }
     else {
-      rc = connect(sockfd, &addr.sa_addr, addr.addrlen);
+      rc = curl_connect(sockfd, &addr.sa_addr, addr.addrlen);
     }
 
     if(-1 == rc)
       error = SOCKERRNO;
 #ifdef ENABLE_QUIC
@@ -1436,12 +1444,12 @@ bool Curl_connalive(struct connectdata *conn)
   else if(conn->sock[FIRSTSOCKET] == CURL_SOCKET_BAD)
     return false;
   else {
     /* use the socket */
     char buf;
-    if(recv((RECV_TYPE_ARG1)conn->sock[FIRSTSOCKET], (RECV_TYPE_ARG2)&buf,
-            (RECV_TYPE_ARG3)1, (RECV_TYPE_ARG4)MSG_PEEK) == 0) {
+    if(curl_recv((RECV_TYPE_ARG1)conn->sock[FIRSTSOCKET], (RECV_TYPE_ARG2)&buf,
+                 (RECV_TYPE_ARG3)1, (RECV_TYPE_ARG4)MSG_PEEK) == 0) {
       return false;   /* FIN received */
     }
   }
 #endif
   return true;
@@ -1535,11 +1543,11 @@ CURLcode Curl_socket(struct connectdata *conn,
                                     (struct curl_sockaddr *)addr);
     Curl_set_in_callback(data, false);
   }
   else
     /* opensocket callback not set, so simply create the socket now */
-    *sockfd = socket(addr->family, addr->socktype, addr->protocol);
+    *sockfd = curl_socket(addr->family, addr->socktype, addr->protocol);
 
   if(*sockfd == CURL_SOCKET_BAD)
     /* no socket, no connection */
     return CURLE_COULDNT_CONNECT;
 
diff --git a/lib/connect.h b/lib/connect.h
index 6fd9ea878..44c178653 100644
--- a/lib/connect.h
+++ b/lib/connect.h
@@ -89,11 +89,11 @@ struct Curl_sockaddr_ex {
   int family;
   int socktype;
   int protocol;
   unsigned int addrlen;
   union {
-    struct sockaddr addr;
+    struct curl_struct_sockaddr addr;
     struct Curl_sockaddr_storage buff;
   } _sa_ex_u;
 };
 #define sa_addr _sa_ex_u.addr
 
diff --git a/lib/curl_get_line.c b/lib/curl_get_line.c
index c4194851a..180ee2ba5 100644
--- a/lib/curl_get_line.c
+++ b/lib/curl_get_line.c
@@ -3,11 +3,11 @@
  *  Project                     ___| | | |  _ \| |
  *                             / __| | | | |_) | |
  *                            | (__| |_| |  _ <| |___
  *                             \___|\___/|_| \_\_____|
  *
- * Copyright (C) 1998 - 2019, Daniel Stenberg, <daniel@haxx.se>, et al.
+ * Copyright (C) 1998 - 2020, Daniel Stenberg, <daniel@haxx.se>, et al.
  *
  * This software is licensed as described in the file COPYING, which
  * you should have received as part of this distribution. The terms
  * are also available at https://curl.haxx.se/docs/copyright.html.
  *
@@ -20,10 +20,12 @@
  *
  ***************************************************************************/
 
 #include "curl_setup.h"
 
+#if !defined(CURL_DISABLE_COOKIES) && !(CURL_DISABLE_ALTSVC)
+
 #include "curl_get_line.h"
 #include "curl_memory.h"
 /* The last #include file should be: */
 #include "memdebug.h"
 
@@ -51,5 +53,7 @@ char *Curl_get_line(char *buf, int len, FILE *input)
     else
       break;
   }
   return NULL;
 }
+
+#endif /* if not disabled */
diff --git a/lib/curl_setup.h b/lib/curl_setup.h
index 21c3f3487..55c81b5be 100644
--- a/lib/curl_setup.h
+++ b/lib/curl_setup.h
@@ -66,14 +66,22 @@
 
 #include "curl_config.h"
 
 #else /* HAVE_CONFIG_H */
 
+#ifdef MICRIUM
+#include "config-micrium.h"
+#endif
+
+#ifdef FreeRTOS
+#include "config-freertos.h"
+#endif
+
 #ifdef _WIN32_WCE
 #  include "config-win32ce.h"
 #else
-#  ifdef WIN32
+#  if defined(WIN32) && !defined(FreeRTOS)
 #    include "config-win32.h"
 #  endif
 #endif
 
 #if defined(macintosh) && defined(__MRC__)
@@ -535,11 +543,11 @@
 
 /*
  * Mutually exclusive CURLRES_* definitions.
  */
 
-#if defined(ENABLE_IPV6) && defined(HAVE_GETADDRINFO)
+#if defined(HAVE_GETADDRINFO)
 #  define CURLRES_IPV6
 #else
 #  define CURLRES_IPV4
 #endif
 
@@ -594,10 +602,27 @@
 #      define CURL_DISABLE_LDAP 1
 #    endif
 #  endif
 #endif
 
+/*
+ * Intentionally fail to build when using msvc 6.0 without PSDK installed.
+ * The brave of heart can circumvent this, defining ALLOW_MSVC6_WITHOUT_PSDK
+ * in lib/config-win32.h although absolutely discouraged and unsupported.
+ */
+
+#if 0
+#  if !defined(HAVE_WINDOWS_H) || ((_MSC_VER < 1300) && !defined(_FILETIME_))
+#    if !defined(ALLOW_MSVC6_WITHOUT_PSDK)
+#      error MSVC 6.0 requires "February 2003 Platform SDK" a.k.a. \
+             "Windows Server 2003 PSDK"
+#    else
+#      define CURL_DISABLE_LDAP 1
+#    endif
+#  endif
+#endif
+
 #ifdef NETWARE
 int netware_init(void);
 #ifndef __NOVELL_LIBC__
 #include <sys/bsdskt.h>
 #include <sys/timeval.h>
diff --git a/lib/curl_setup_once.h b/lib/curl_setup_once.h
index e7c00deab..06bcc305a 100644
--- a/lib/curl_setup_once.h
+++ b/lib/curl_setup_once.h
@@ -128,11 +128,12 @@ struct timeval {
 #if defined(__minix)
 /* Minix doesn't support recv on TCP sockets */
 #define sread(x,y,z) (ssize_t)read((RECV_TYPE_ARG1)(x), \
                                    (RECV_TYPE_ARG2)(y), \
                                    (RECV_TYPE_ARG3)(z))
-
+#elif defined(FreeRTOS)
+#define sread(a,b,c) FreeRTOS_recv(a,b,c,0)
 #elif defined(HAVE_RECV)
 /*
  * The definitions for the return type and arguments types
  * of functions recv() and send() belong and come from the
  * configuration file. Do not define them in any other place.
@@ -191,10 +192,13 @@ struct timeval {
     !defined(SEND_TYPE_ARG4) || \
     !defined(SEND_TYPE_RETV)
   /* */
   Error Missing_definition_of_return_and_arguments_types_of_send
   /* */
+#elif defined(FreeRTOS)
+  /* The flags argument (4) marked as 'Not currently used' */
+#define swrite(a,b,c) FreeRTOS_send(a,b,c,0)
 #else
 #define swrite(x,y,z) (ssize_t)send((SEND_TYPE_ARG1)(x), \
                                     (SEND_QUAL_ARG2 SEND_TYPE_ARG2)(y), \
                                     (SEND_TYPE_ARG3)(z), \
                                     (SEND_TYPE_ARG4)(SEND_4TH_ARG))
@@ -258,10 +262,12 @@ struct timeval {
 #  define sclose(x)  CloseSocket((x))
 #elif defined(HAVE_CLOSE_S)
 #  define sclose(x)  close_s((x))
 #elif defined(USE_LWIPSOCK)
 #  define sclose(x)  lwip_close((x))
+#elif defined(FreeRTOS)
+#  define sclose(x)  FreeRTOS_closesocket((x))
 #else
 #  define sclose(x)  close((x))
 #endif
 
 /*
diff --git a/lib/multi.c b/lib/multi.c
index 3c7fb85ed..c63361e8d 100644
--- a/lib/multi.c
+++ b/lib/multi.c
@@ -302,11 +302,11 @@ static size_t fd_key_compare(void *k1, size_t k1_len, void *k2, size_t k2_len)
 static size_t hash_fd(void *key, size_t key_length, size_t slots_num)
 {
   curl_socket_t fd = *((curl_socket_t *) key);
   (void) key_length;
 
-  return (fd % slots_num);
+  return ((long)fd % slots_num); /* weirdo FreeRTOS hack */
 }
 
 /*
  * sh_init() creates a new socket hash and returns the handle for it.
  *
@@ -1015,12 +1015,12 @@ static int multi_getsock(struct Curl_easy *data,
   }
 
 }
 
 CURLMcode curl_multi_fdset(struct Curl_multi *multi,
-                           fd_set *read_fd_set, fd_set *write_fd_set,
-                           fd_set *exc_fd_set, int *max_fd)
+                           curl_fd_set *read_fd_set, curl_fd_set *write_fd_set,
+                           curl_fd_set *exc_fd_set, int *max_fd)
 {
   /* Scan through all the easy handles to get the file descriptors set.
      Some easy handles may not have connected to the remote host yet,
      and then we must make sure that is done. */
   struct Curl_easy *data;
@@ -1041,22 +1041,24 @@ CURLMcode curl_multi_fdset(struct Curl_multi *multi,
 
     for(i = 0; i< MAX_SOCKSPEREASYHANDLE; i++) {
       curl_socket_t s = CURL_SOCKET_BAD;
 
       if((bitmap & GETSOCK_READSOCK(i)) && VALID_SOCK((sockbunch[i]))) {
-        FD_SET(sockbunch[i], read_fd_set);
+        CURL_FD_SET(sockbunch[i], read_fd_set, eSELECT_READ);
         s = sockbunch[i];
       }
       if((bitmap & GETSOCK_WRITESOCK(i)) && VALID_SOCK((sockbunch[i]))) {
-        FD_SET(sockbunch[i], write_fd_set);
+        CURL_FD_SET(sockbunch[i], write_fd_set, eSELECT_WRITE);
         s = sockbunch[i];
       }
       if(s == CURL_SOCKET_BAD)
         /* this socket is unused, break out of loop */
         break;
+#ifndef FreeRTOS
       if((int)s > this_max_fd)
         this_max_fd = (int)s;
+#endif
     }
 
     data = data->next; /* check next handle */
   }
 
@@ -1082,12 +1084,12 @@ static CURLMcode Curl_multi_wait(struct Curl_multi *multi,
   unsigned int nfds = 0;
   unsigned int curlfds;
   bool ufds_malloc = FALSE;
   long timeout_internal;
   int retcode = 0;
-  struct pollfd a_few_on_stack[NUM_POLLS_ON_STACK];
-  struct pollfd *ufds = &a_few_on_stack[0];
+  struct curl_pollfd a_few_on_stack[NUM_POLLS_ON_STACK];
+  struct curl_pollfd *ufds = &a_few_on_stack[0];
 
   if(!GOOD_MULTI_HANDLE(multi))
     return CURLM_BAD_HANDLE;
 
   if(multi->in_callback)
diff --git a/lib/multihandle.h b/lib/multihandle.h
index 9d73df081..e5f9012fe 100644
--- a/lib/multihandle.h
+++ b/lib/multihandle.h
@@ -65,15 +65,15 @@ typedef enum {
 #define GETSOCK_READABLE (0x00ff)
 #define GETSOCK_WRITABLE (0xff00)
 
 #define CURLPIPE_ANY (CURLPIPE_MULTIPLEX)
 
-#if defined(USE_SOCKETPAIR) && !defined(USE_BLOCKING_SOCKETS)
+#if defined(USE_SOCKETPAIR) && !defined(USE_BLOCKING_SOCKETS) &&        \
+  !defined(CURL_DISABLE_SOCKETPAIR)
 #define ENABLE_WAKEUP
 #endif
 
-
 /* value for MAXIMUM CONCURRENT STREAMS upper limit */
 #define INITIAL_MAX_CONCURRENT_STREAMS ((1U << 31) - 1)
 
 /* This is the struct known as CURLM on the outside */
 struct Curl_multi {
diff --git a/lib/select.c b/lib/select.c
index abb124ae8..bbf31259f 100644
--- a/lib/select.c
+++ b/lib/select.c
@@ -140,13 +140,13 @@ int Curl_wait_ms(timediff_t timeout_ms)
  *   -1 = system call error or fd >= FD_SETSIZE
  *    0 = timeout
  *    N = number of signalled file descriptors
  */
 int Curl_select(curl_socket_t maxfd,   /* highest socket number */
-                fd_set *fds_read,      /* sockets ready for reading */
-                fd_set *fds_write,     /* sockets ready for writing */
-                fd_set *fds_err,       /* sockets with errors */
+                curl_fd_set *fds_read,      /* sockets ready for reading */
+                curl_fd_set *fds_write,     /* sockets ready for writing */
+                curl_fd_set *fds_err,       /* sockets with errors */
                 timediff_t timeout_ms) /* milliseconds to wait */
 {
   struct timeval pending_tv;
   struct timeval *ptimeout;
   int r;
@@ -213,10 +213,17 @@ int Curl_select(curl_socket_t maxfd,   /* highest socket number */
   */
   r = select((int)maxfd + 1,
              fds_read && fds_read->fd_count ? fds_read : NULL,
              fds_write && fds_write->fd_count ? fds_write : NULL,
              fds_err && fds_err->fd_count ? fds_err : NULL, ptimeout);
+#elif defined(FreeRTOS)
+  {
+    /* convert the timeout to FreeRTOS ticks */
+    TickType_t ticks = ptimeout ? ptimeout->tv_sec * configTICK_RATE_HZ : +
+      (ptimeout->tv_usec * configTICK_RATE_HZ) / 1000000;
+    r = FreeRTOS_select(fds_read, ticks);
+  }
 #else
   r = select((int)maxfd + 1, fds_read, fds_write, fds_err, ptimeout);
 #endif
 
   return r;
@@ -249,13 +256,15 @@ int Curl_socket_check(curl_socket_t readfd0, /* two sockets to read from */
 {
 #ifdef HAVE_POLL_FINE
   struct pollfd pfd[3];
   int num;
 #else
-  fd_set fds_read;
-  fd_set fds_write;
-  fd_set fds_err;
+  struct timeval pending_tv;
+  struct timeval *ptimeout;
+  curl_fd_set fds_read;
+  curl_fd_set fds_write;
+  curl_fd_set fds_err;
   curl_socket_t maxfd;
 #endif
   int r;
   int ret;
 
@@ -320,10 +329,23 @@ int Curl_socket_check(curl_socket_t readfd0, /* two sockets to read from */
       ret |= CURL_CSELECT_ERR;
   }
 
   return ret;
 
+#else  /* HAVE_POLL_FINE */
+
+#if defined(FreeRTOS)
+  /* using its weirdo select() */
+  fds_read = FreeRTOS_CreateSocketSet();
+  maxfd = (curl_socket_t)-1;
+  if(readfd0 != CURL_SOCKET_BAD)
+    CURL_FD_SET(readfd0, &fds_read, eSELECT_READ);
+  if(readfd1 != CURL_SOCKET_BAD)
+    CURL_FD_SET(readfd1, &fds_read, eSELECT_READ);
+  if(writefd != CURL_SOCKET_BAD)
+    CURL_FD_SET(writefd, &fds_read, eSELECT_WRITE);
+
 #else  /* HAVE_POLL_FINE */
 
   FD_ZERO(&fds_err);
   maxfd = (curl_socket_t)-1;
 
@@ -348,10 +370,11 @@ int Curl_socket_check(curl_socket_t readfd0, /* two sockets to read from */
     FD_SET(writefd, &fds_write);
     FD_SET(writefd, &fds_err);
     if(writefd > maxfd)
       maxfd = writefd;
   }
+#endif
 
   /* We know that we have at least one bit set in at least two fd_sets in
      this case, but we may have no bits set in either fds_read or fd_write,
      so check for that and handle it.  Luckily, with WinSock, we can _also_
      ask how many bits are set on an fd_set.
@@ -367,10 +390,20 @@ int Curl_socket_check(curl_socket_t readfd0, /* two sockets to read from */
     return -1;
   if(r == 0)
     return 0;
 
   ret = 0;
+#ifdef FreeRTOS
+  if(r) {
+    if((readfd0 != CURL_SOCKET_BAD) && FreeRTOS_FD_ISSET(readfd0, fds_read))
+      ret |= CURL_CSELECT_IN;
+    if((readfd1 != CURL_SOCKET_BAD) && FreeRTOS_FD_ISSET(readfd1, fds_read))
+      ret |= CURL_CSELECT_IN2;
+    if((writefd != CURL_SOCKET_BAD) && FreeRTOS_FD_ISSET(writefd, fds_read))
+      ret |= CURL_CSELECT_OUT;
+  }
+#else
   if(readfd0 != CURL_SOCKET_BAD) {
     if(FD_ISSET(readfd0, &fds_read))
       ret |= CURL_CSELECT_IN;
     if(FD_ISSET(readfd0, &fds_err))
       ret |= CURL_CSELECT_ERR;
@@ -385,15 +418,15 @@ int Curl_socket_check(curl_socket_t readfd0, /* two sockets to read from */
     if(FD_ISSET(writefd, &fds_write))
       ret |= CURL_CSELECT_OUT;
     if(FD_ISSET(writefd, &fds_err))
       ret |= CURL_CSELECT_ERR;
   }
+#endif
 
   return ret;
 
 #endif  /* HAVE_POLL_FINE */
-
 }
 
 /*
  * This is a wrapper around poll().  If poll() does not exist, then
  * select() is used instead.  An error is returned if select() is
@@ -410,15 +443,15 @@ int Curl_socket_check(curl_socket_t readfd0, /* two sockets to read from */
 int Curl_poll(struct pollfd ufds[], unsigned int nfds, timediff_t timeout_ms)
 {
 #ifdef HAVE_POLL_FINE
   int pending_ms;
 #else
-  fd_set fds_read;
-  fd_set fds_write;
-  fd_set fds_err;
-  curl_socket_t maxfd;
+  curl_fd_set fds_read;
+  curl_fd_set fds_write;
+  curl_fd_set fds_err;
 #endif
+  curl_socket_t maxfd;
   bool fds_none = TRUE;
   unsigned int i;
   int r;
 
   if(ufds) {
@@ -439,16 +472,10 @@ int Curl_poll(struct pollfd ufds[], unsigned int nfds, timediff_t timeout_ms)
      time in this function does not need to be measured. This happens
      when function is called with a zero timeout or a negative timeout
      value indicating a blocking call should be performed. */
 
 #ifdef HAVE_POLL_FINE
-
-  /* prevent overflow, timeout_ms is typecast to int. */
-#if TIMEDIFF_T_MAX > INT_MAX
-  if(timeout_ms > INT_MAX)
-    timeout_ms = INT_MAX;
-#endif
   if(timeout_ms > 0)
     pending_ms = (int)timeout_ms;
   else if(timeout_ms < 0)
     pending_ms = -1;
   else
@@ -469,10 +496,30 @@ int Curl_poll(struct pollfd ufds[], unsigned int nfds, timediff_t timeout_ms)
       ufds[i].revents |= (POLLIN|POLLOUT);
   }
 
 #else  /* HAVE_POLL_FINE */
 
+#ifdef FreeRTOS
+  fds_read = FreeRTOS_CreateSocketSet();
+  maxfd = (curl_socket_t)-1;
+
+  for(i = 0; i < nfds; i++) {
+    ufds[i].revents = 0;
+    if(ufds[i].fd == CURL_SOCKET_BAD)
+      continue;
+    VERIFY_SOCK(ufds[i].fd);
+    if(ufds[i].events & (POLLIN|POLLOUT|POLLPRI|
+                          POLLRDNORM|POLLWRNORM|POLLRDBAND)) {
+      if(ufds[i].fd > maxfd)
+        maxfd = ufds[i].fd;
+      if(ufds[i].events & (POLLRDNORM|POLLIN))
+        CURL_FD_SET(ufds[i].fd, &fds_read, eSELECT_READ);
+      if(ufds[i].events & (POLLWRNORM|POLLOUT))
+        CURL_FD_SET(ufds[i].fd, &fds_read, eSELECT_WRITE);
+    }
+  }
+#else
   FD_ZERO(&fds_read);
   FD_ZERO(&fds_write);
   FD_ZERO(&fds_err);
   maxfd = (curl_socket_t)-1;
 
@@ -491,10 +538,11 @@ int Curl_poll(struct pollfd ufds[], unsigned int nfds, timediff_t timeout_ms)
         FD_SET(ufds[i].fd, &fds_write);
       if(ufds[i].events & (POLLRDBAND|POLLPRI))
         FD_SET(ufds[i].fd, &fds_err);
     }
   }
+#endif
 
   r = Curl_select(maxfd, &fds_read, &fds_write, &fds_err, timeout_ms);
 
   if(r < 0)
     return -1;
@@ -504,16 +552,23 @@ int Curl_poll(struct pollfd ufds[], unsigned int nfds, timediff_t timeout_ms)
   r = 0;
   for(i = 0; i < nfds; i++) {
     ufds[i].revents = 0;
     if(ufds[i].fd == CURL_SOCKET_BAD)
       continue;
+#ifdef FreeRTOS
+    if((ufds[i].events & POLLIN) && FreeRTOS_FD_ISSET(ufds[i].fd, fds_read))
+      ufds[i].revents |= POLLIN;
+    if((ufds[i].events & POLLOUT) && FreeRTOS_FD_ISSET(ufds[i].fd, fds_read))
+      ufds[i].revents |= POLLOUT;
+#else
     if(FD_ISSET(ufds[i].fd, &fds_read))
       ufds[i].revents |= POLLIN;
     if(FD_ISSET(ufds[i].fd, &fds_write))
       ufds[i].revents |= POLLOUT;
     if(FD_ISSET(ufds[i].fd, &fds_err))
       ufds[i].revents |= POLLPRI;
+#endif
     if(ufds[i].revents != 0)
       r++;
   }
 
 #endif  /* HAVE_POLL_FINE */
diff --git a/lib/select.h b/lib/select.h
index 95181f467..cc40640b6 100644
--- a/lib/select.h
+++ b/lib/select.h
@@ -71,13 +71,13 @@ struct pollfd
    are exposed to users, but this *IN2 bit is only ever used internally and
    therefore defined here */
 #define CURL_CSELECT_IN2 (CURL_CSELECT_ERR << 1)
 
 int Curl_select(curl_socket_t maxfd,
-                fd_set *fds_read,
-                fd_set *fds_write,
-                fd_set *fds_err,
+                curl_fd_set *fds_read,
+                curl_fd_set *fds_write,
+                curl_fd_set *fds_err,
                 timediff_t timeout_ms);
 
 int Curl_socket_check(curl_socket_t readfd, curl_socket_t readfd2,
                       curl_socket_t writefd,
                       timediff_t timeout_ms);
@@ -95,11 +95,11 @@ int tpf_select_libcurl(int maxfds, fd_set* reads, fd_set* writes,
 #endif
 
 /* Winsock and TPF sockets are not in range [0..FD_SETSIZE-1], which
    unfortunately makes it impossible for us to easily check if they're valid
 */
-#if defined(USE_WINSOCK) || defined(TPF)
+#if defined(USE_WINSOCK) || defined(TPF) || defined(FreeRTOS)
 #define VALID_SOCK(x) 1
 #define VERIFY_SOCK(x) Curl_nop_stmt
 #else
 #define VALID_SOCK(s) (((s) >= 0) && ((s) < FD_SETSIZE))
 #define VERIFY_SOCK(x) do { \
diff --git a/lib/socketpair.c b/lib/socketpair.c
index 1ec0d75a4..2a89b7b20 100644
--- a/lib/socketpair.c
+++ b/lib/socketpair.c
@@ -3,11 +3,11 @@
  *  Project                     ___| | | |  _ \| |
  *                             / __| | | | |_) | |
  *                            | (__| |_| |  _ <| |___
  *                             \___|\___/|_| \_\_____|
  *
- * Copyright (C) 2019, Daniel Stenberg, <daniel@haxx.se>, et al.
+ * Copyright (C) 2019, 2020, Daniel Stenberg, <daniel@haxx.se>, et al.
  *
  * This software is licensed as described in the file COPYING, which
  * you should have received as part of this distribution. The terms
  * are also available at https://curl.haxx.se/docs/copyright.html.
  *
@@ -21,11 +21,11 @@
  ***************************************************************************/
 
 #include "curl_setup.h"
 #include "socketpair.h"
 
-#ifndef HAVE_SOCKETPAIR
+#if !defined(HAVE_SOCKETPAIR) && !defined(CURL_DISABLE_SOCKETPAIR)
 #ifdef WIN32
 /*
  * This is a socketpair() implementation for Windows.
  */
 #include <string.h>
diff --git a/lib/urldata.h b/lib/urldata.h
index 0ae926927..a626daf77 100644
--- a/lib/urldata.h
+++ b/lib/urldata.h
@@ -23,10 +23,11 @@
  ***************************************************************************/
 
 /* This file is for lib internal stuff */
 
 #include "curl_setup.h"
+#include <curl/curl.h>
 
 #define PORT_FTP 21
 #define PORT_FTPS 990
 #define PORT_TELNET 23
 #define PORT_HTTP 80
diff --git a/maketgz b/maketgz
index 55a57c1b3..eac949759 100755
--- a/maketgz
+++ b/maketgz
@@ -7,11 +7,11 @@
 #  Project                     ___| | | |  _ \| |
 #                             / __| | | | |_) | |
 #                            | (__| |_| |  _ <| |___
 #                             \___|\___/|_| \_\_____|
 #
-# Copyright (C) 1998 - 2018, Daniel Stenberg, <daniel@haxx.se>, et al.
+# Copyright (C) 1998 - 2020, Daniel Stenberg, <daniel@haxx.se>, et al.
 #
 # This software is licensed as described in the file COPYING, which
 # you should have received as part of this distribution. The terms
 # are also available at https://curl.haxx.se/docs/copyright.html.
 #
@@ -22,10 +22,11 @@
 # This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 # KIND, either express or implied.
 #
 ###########################################################################
 
+CURL="tiny-curl"
 version=$1
 
 if [ -z "$version" ]; then
   echo "Specify a version number!"
   exit
@@ -99,11 +100,11 @@ rm -f "$PLIST.bak"
 if test -n "$only"; then
   # done!
   exit;
 fi
 
-echo "curl version $curlversion"
+echo "$CURL version $curlversion"
 echo "libcurl version $libversion"
 echo "libcurl numerical $numeric"
 echo "datestamp $datestamp"
 
 findprog() {
@@ -145,11 +146,11 @@ fi
 #
 # Modify the man pages to display the version number and date.
 #
 
 echo "update man pages"
-./scripts/updatemanpages.pl $version
+./scripts/updatemanpages.pl $version >/dev/null
 
 # make the generated file newer than the man page
 touch src/tool_hugehelp.c
 
 ############################################################################
@@ -159,34 +160,37 @@ echo "make vc-ide"
 make -s vc-ide
 
 echo "produce CHANGES"
 git log --pretty=fuller --no-color --date=short --decorate=full -1000 | ./scripts/log2changes.pl > CHANGES.dist
 
+echo "generate patch set from ${major}.${minor}.${patch}"
+git diff curl-${major}_${minor}_${patch} >$CURL-${major}.${minor}.${patch}.patch.dist
+
 ############################################################################
 #
 # Now run make dist to generate a tar.gz archive
 #
 
 echo "make dist"
-targz="curl-$version.tar.gz"
-make -sj dist VERSION=$version
+targz="$CURL-$version.tar.gz"
+make -sj dist VERSION=$version PACKAGE="$CURL"
 
 ############################################################################
 #
 # Now make a bz2 archive from the tar.gz original
 #
 
-bzip2="curl-$version.tar.bz2"
+bzip2="$CURL-$version.tar.bz2"
 echo "Generating $bzip2"
 gzip -dc $targz | bzip2 --best > $bzip2
 
 ############################################################################
 #
 # Now make an xz archive from the tar.gz original
 #
 
-xz="curl-$version.tar.xz"
+xz="$CURL-$version.tar.xz"
 echo "Generating $xz"
 gzip -dc $targz | xz -6e - > $xz
 
 ############################################################################
 #
@@ -201,17 +205,17 @@ makezip() {
   mv $zip ../
   cd ..
   rm -rf $tempdir
 }
 
-zip="curl-$version.zip"
+zip="$CURL-$version.zip"
 echo "Generating $zip"
 tempdir=".builddir"
 makezip
 
 echo "------------------"
-echo "maketgz report:"
+echo "maketgz $CURL report:"
 echo ""
 ls -l $targz $bzip2 $zip $xz
 
 echo "Run this:"
 echo "gpg -b -a $targz && gpg -b -a $bzip2 && gpg -b -a $zip && gpg -b -a $xz"
